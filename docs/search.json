[
  {
    "objectID": "reference/translations_sheet.html",
    "href": "reference/translations_sheet.html",
    "title": "Generate linelist in several languages",
    "section": "",
    "text": "The setup file has functionalities to create linelists in different languages from the same dictionary, which makes maintenance much easier.\nThe Translation sheet contains all text values to translate. This works because by design, the text fields that require translation in the various sheets of the setup file are tagged with a “translate as text” tag.1\nThe Translation contains at least one column, with the default language. i.e. the language you chose to complete the setup file (here: “French”).\nThe column headings can be modified. It is better to name the languages in the table headings, as they will be used to populate a drop-down menu later, when the linelist is created.\nClick on the button “update translation table” from the Setup Options ribbon to import all the fields to be translated into the table. They are listed in alphabetical order.\nTo add a language to the table, use the Setup Options ribbon.\nIn the “Translation” block, in the “Add language” field, enter the name of the language you want to add, then press the “Enter” key on your keyboard.\nThe new language is added to the table:\nYou can then fill in your translations.\nIf you are making changes to the set-up and want to ensure that all the translatable fields are correctly listed, click Update translation table. A message will then inform you of the number of missing fields per language.",
    "crumbs": [
      "About",
      "Reference",
      "Generate linelist in several languages"
    ]
  },
  {
    "objectID": "reference/translations_sheet.html#footnotes",
    "href": "reference/translations_sheet.html#footnotes",
    "title": "Generate linelist in several languages",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nwhich you can actually see in light grey font above the columns to be translated.↩︎",
    "crumbs": [
      "About",
      "Reference",
      "Generate linelist in several languages"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html",
    "href": "reference/exports_sheet.html",
    "title": "Define exports",
    "section": "",
    "text": "It is possible to predefine exports, such as a specific export for a given MoH. The setup of exports is done in two different sheets:\nA sheet in the linelist file corresponds to a sheet in the exported file.",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#export-number",
    "href": "reference/exports_sheet.html#export-number",
    "title": "Define exports",
    "section": "Export number",
    "text": "Export number\nOne line corresponds to one export. The exports are numbered from 1 to how many exports are available.\nIn line “1”, we define the parameters for export 1, whose variables to be exported have been defined in the Dictionary sheet in the “Export 1” column, etc.\n\n\nNote that you can use the “Add rows to table in current sheet” button or the “Resize tables in current sheet” button to add more exports or removed empty rows (see the Setup Options ribbon section below).",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#status",
    "href": "reference/exports_sheet.html#status",
    "title": "Define exports",
    "section": "Status",
    "text": "Status\nThis is an active/inactive drop-down menu field. It is used to activate or deactivate an export button.\nExample:\nDefinition in the setup file:\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#label-button",
    "href": "reference/exports_sheet.html#label-button",
    "title": "Define exports",
    "section": "Label button",
    "text": "Label button\nThis is a free text field that contains the label of the export button in the linelist. It should be fairly concise or it may overflow the button box.\nExample :\nDefinition in the setup file:\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#file-format",
    "href": "reference/exports_sheet.html#file-format",
    "title": "Define exports",
    "section": "File format",
    "text": "File format\nThis is a dropdown menu that allows choosing between the .xlsx and .xlsb file format for the exported file.",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#file-name",
    "href": "reference/exports_sheet.html#file-name",
    "title": "Define exports",
    "section": "File name",
    "text": "File name\nThis is a free text field used to define the name of the export.\nYou can either define fixed export names (ex: “export_moh”) or dynamic exports names, that use values collected from variables in the linelist (such as the country, the section etc.).\nFor dynamic names, you can only use variables that contain only one value (vlist1D variables), usually defined in the “Info” sheet of the linelist.\n\nRules to create a name\n\nCharacter strings passed to this field must be enclosed in inverted commas like these: “a character string”\nVariable names passed to this field must be naked (not surrounded by inverted comas), similarly to how we refer to variables in the Dictionary sheet columns.\nDifferent components of the name are separated by ‘+’, which will create names where the components are separated by ‘__’.\nNo need to add a date to the export: the date and time at which an export is made is appended at the end of the name automatically.\nIf the export is to be password protected (see below), the public key for opening the file will be included in the name.\n\n\n\nExample\n\nHere, the pieces in green, surrounded by inverted comas are fixed bits of texts (character strings). The blue pieces are vlist1D variables that were defined for that linelist (in the Info sheet, hence their suffixes).\nThis name specification will result in the following export names, depending on where the linelist is used (hence depending on how they filled the metadata):\n\nMNG_linelist__MNG24__SSD__MSF-OCP__Aweil__anonyme__vb-1003__20240617-1901.xlsb if the linelist was used by OCP in Aweil (South Sudan)\nMNG_linelist__MNG24__NER__WaCa__Maradi__anonyme__vb-2035__20240617-1903.xlsb if the linelist was used by WaCa in Maradi (Niger)\n…\n\nNote: if a variable is referred to in the name but remains empty in the linelist, the name of the variable is used as a placeholder. In the example above, if the data encoder filled none of the variables in the metadata, the created file would have the following name:\nMNG_linelist__info_outbreak_code__info_country_code__info_organisation__info_facility_name__anonyme__vb-1003__20240617-1906.xlsb",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#password",
    "href": "reference/exports_sheet.html#password",
    "title": "Define exports",
    "section": "Password",
    "text": "Password\nThis is a yes/no drop-down field that is used to define whether or not the export should be password-protected.\nIf so, the password will be displayed automatically when the export is created.\nExample:\nDefinition in the setup file:\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#include-personal-identifiers",
    "href": "reference/exports_sheet.html#include-personal-identifiers",
    "title": "Define exports",
    "section": "Include personal identifiers",
    "text": "Include personal identifiers\nThis is a yes/no dropdown menu which controls whether variables that are tagged as “Personal identifier” in the Dictionary sheet should be included in the export.1\nThe column defaults to “no”.",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#include-p-code",
    "href": "reference/exports_sheet.html#include-p-code",
    "title": "Define exports",
    "section": "Include P-code",
    "text": "Include P-code\nThis is a yes/no drop-down field that controls whether the hidden columns that contains processed geographic data such as P-codes should be exported in addition to the raw data columns.2",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#header-format",
    "href": "reference/exports_sheet.html#header-format",
    "title": "Define exports",
    "section": "Header format",
    "text": "Header format\nThis is a variables names/variables labels drop-down menu field. It allows you to define whether you want the column headings in the export to correspond to the variable names, their labels, or both.\n\n\n\n\n\n\nTip\n\n\n\nIf you create an export for analyses purpose, use the variable names to avoid having to format and rename when importing in your favourite statistical software. If you are exporting data to the MoH or other partners, it might be easier for them to have the variables labels, which are more descriptive about the content of the variable.\n\n\nExample:\nDefinition in the setup file:\n\nDisplay in export:\n\nDefinition in the setup file:\n\nDisplay in export:",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#export-metadata-sheets",
    "href": "reference/exports_sheet.html#export-metadata-sheets",
    "title": "Define exports",
    "section": "Export Metadata Sheets",
    "text": "Export Metadata Sheets\nThis is a yes/no drop-down field. By selecting “yes”, you decide that in addition to the data to be exported, you will also export:\n\nThe “Dictionary” sheet\nThe “Choices” sheet\nA metadata sheet3",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#export-translation",
    "href": "reference/exports_sheet.html#export-translation",
    "title": "Define exports",
    "section": "Export Translation",
    "text": "Export Translation\nThis is a yes/no drop-down field. Selecting “yes” means that, in addition to the data to be exported, we will also have the sheet containing the translations.",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#export-analysis-sheet",
    "href": "reference/exports_sheet.html#export-analysis-sheet",
    "title": "Define exports",
    "section": "Export Analysis Sheet",
    "text": "Export Analysis Sheet\nThis is a yes/no drop-down field. By selecting ‘yes’, you decide that in addition to the data to be exported, you will also export all the analysis tables (but not the graphs).\n\n\n\n\n\n\nTip\n\n\n\nIt is also possible to export analysis tables directly from the linelist using the “Export analyses” button.",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/exports_sheet.html#footnotes",
    "href": "reference/exports_sheet.html#footnotes",
    "title": "Define exports",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRemember, in the Dictionary sheet, any variable with anything written in the export columns will be exported in the corresponding exports (even if it is written “no”).↩︎\nThese columns are automatically calculated when geo and hf variables are created in the linelist. They contain concatenated administrative levels at different scales, and p-codes. They are used for creating maps.↩︎\nwe are not speaking of the sheet usually created for linelists that contains variables to collect metadata about the project (MSF section, disease, facility name…), but of hidden linelist metadata (when the file was compiled, language, version etc.)↩︎",
    "crumbs": [
      "About",
      "Reference",
      "Define exports"
    ]
  },
  {
    "objectID": "reference/custom_formulas.html",
    "href": "reference/custom_formulas.html",
    "title": "Custom formulas",
    "section": "",
    "text": "EPIWEEK: returns the week number.\nN: count the number of lines, mostly used in the analyses\nDATE_RANGE: range of a date column, mostly used in the global summary table",
    "crumbs": [
      "About",
      "Reference",
      "Custom formulas"
    ]
  },
  {
    "objectID": "reference/custom_formulas.html#custom-formulas",
    "href": "reference/custom_formulas.html#custom-formulas",
    "title": "Custom formulas",
    "section": "",
    "text": "EPIWEEK: returns the week number.\nN: count the number of lines, mostly used in the analyses\nDATE_RANGE: range of a date column, mostly used in the global summary table",
    "crumbs": [
      "About",
      "Reference",
      "Custom formulas"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html",
    "href": "reference/analyses_sheet.html",
    "title": "Define basic analyses",
    "section": "",
    "text": "This sheet contains several tables for defining different types of analyses and their corresponding graphs:",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#global-summary",
    "href": "reference/analyses_sheet.html#global-summary",
    "title": "Define basic analyses",
    "section": "Global Summary",
    "text": "Global Summary\n\nThe “Global Summary” table summarises certain indicators for the current epidemic. It has 3 columns:\n\nSummary Label: free text field for entering a short but explicit label describing the analysis\nSummary function: free text field for entering the function that will display the desired indicator.1\nFormat: drop-down menu for defining the display format of the expected result (see also Format)\n\n\nExample\nDefinition in the setup file:\n\nDisplay in the linelist:",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#univariate-analysis",
    "href": "reference/analyses_sheet.html#univariate-analysis",
    "title": "Define basic analyses",
    "section": "Univariate Analysis",
    "text": "Univariate Analysis\n\nThe “Univariate Analysis” table is used to describe analyses based on a single variable. It has 10 columns:\nSection: this is a free field used to define blocks of univariate analyses on a theme, for example all the tables grouping patient characteristics. It will also be possible to navigate between sections in the linelist using the “Go to section” drop-down menu.\nTable title: this is a free field for entering the name of the table with the analyses. It should be fairly explicit and short.\nGroup by variable (row): this is a static drop-down menu containing the variables that can be analysed. In other words, variables with known modalities, i.e. choice_manual and choice_formula variables.\nAdd missing data: this is a yes/no field used to indicate whether you want to count missing data for the selected variable.\nSummary function: this is a free field in which to enter the formula corresponding to the desired analysis. The formula must always be written without the “=” sign and in English, whatever the language in which the setup file is written (see formula).\nOften the aim is to show the number of patients by modalities of a variable, and the “N” function, for counting rows, is sufficient.\nSummary label: this is a free field which corresponds to the label which will be displayed above the results column.\nFormat: this is a static drop-down menu with a pre-selection of possible display formats. (see also Format)\nAdd percentage: this is a yes/no field used to indicate whether you want to see the results as a percentage as well as a value. If “yes”, a “%” column will be added to the right of the “summary function” column in the linelist.\nAdd graph: this is a yes/no field used to indicate whether you want a vertical bar graph.\nIf the previous “Add percentage” option is set to “yes”, the percentage will be displayed on the secondary vertical axis of the graph.\nFlip coordinates: this is a yes/no field used to indicate whether you want the graphic to be displayed horizontally rather than vertically.\nIf the “Add percentage” and “Flip coordinates” options are set to “yes”, the graph will not contain the percentages, as the two options are incompatible and the vertical display of the graph will prevail.\nA “Note” message will be displayed in the “__checkRep” sheet.\n\n\nExample\n\nDefinition in the setup file:\nDisplay in the linelist:\n\n\n\nSummary\n\n\n\n\n\n\n\n\n\nColumn\nType\nMandatory\nDetails\n\n\n\n\nSection\nFree text\nYes\nGroup tables by section\n\n\nTable title\nFree text\nYes\nShort title\n\n\nGroup by variable (row)\nDropdown\nYes\nOne categorial variable to summarise\n\n\nAdd missing data\nDropdown (yes/no)\n\nAdd rows with missing values counts?\n\n\nSummary function\nFree text\nYes\nN to count rows, other formula accepted\n\n\nSummary label\nFree text\n\nName of the summary\n\n\nFormat\nDropdown\n\nFormat of the summary\n\n\nAdd percentage\nDropdown (yes/no)\n\n\n\n\nAdd graph\nDropdown (yes/no)\n\n\n\n\nFlip coordinates\nDropdown (yes/no)\n\nInverse x and y axis of the graph",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#bivariate-analysis",
    "href": "reference/analyses_sheet.html#bivariate-analysis",
    "title": "Define basic analyses",
    "section": "Bivariate Analysis",
    "text": "Bivariate Analysis\n\nThe “Bivariate Analysis” table is used to describe analyses based on two variables. It has 11 columns:\nSection: this is a free field used to group analyses on a theme, for example all the tables grouping patient characteristics. It will also be possible to navigate between sections in the linelist using the “Go to section” drop-down menu.\nTable title: this is a free field for entering the name of the table with the analyses. It should be fairly explicit and short.\nGroup by variable (row): this is a static drop-down menu containing the variables that can be analysed. In other words, variables with known modalities, i.e. choice_manual and choice_formula variables.\nGroup by variable (column): this is a static drop-down menu containing the variables that can be analysed. In other words, variables with known modalities, i.e. choice_manual and choice_formula variables.\nAdd missing data: this is a drop-down menu with 4 possible options, which allows you to indicate whether you want to count missing data for the selected variable(s):\n\nno: missing data are not added\nrow: missing data is added to variables in rows\ncolumn: missing data is added to variables in columns\nall: missing data is added to both column and row variables\n\nSummary function: this is a free field in which to enter the formula corresponding to the desired analysis. The formula must always be written without the “=” sign and in English, whatever the language in which the setup file is written (see formula).\nOften the aim is to show the distribution of patients between the modalities of a variable, and the “N” function is sufficient.\nSummary label: this is a free field which corresponds to the label which will be displayed above the results column.\nFormat: this is a static drop-down menu with a preselection of possible display formats. (see also Format)\nAdd percentage: this is a yes/no field used to indicate whether you want to see the results as a percentage as well as a value. If yes, a “%” column will be added to the right of the “summary function” column in the linelist.\nAdd graph: this is a yes/no field used to indicate whether you want a vertical bar graph.\nIf the previous “Add percentage” option is set to “yes”, the percentage will be displayed on the secondary vertical axis of the graph.\nFlip coordinates: this is a yes/no field used to indicate whether you want the graphic to be displayed horizontally rather than vertically.\nIf the “Add percentage” and “Flip coordinates” options are set to “yes”, the graph will not contain the percentages, as the two options are incompatible and the vertical display of the graph will prevail.\nA “Note” message will be displayed in the “__checkRep” sheet.\n\n\n\n\n\n\n\n\n\nColumn\nType\nMandatory\nDetails\n\n\n\n\nSection\nFree text\nYes\nGroup tables by section\n\n\nTable title\nFree text\nYes\nShort title\n\n\nGroup by variable (row)\nDropdown\nYes\nOne categorial variable to summarise\n\n\nGroup by variable (column)\n\nYes\n\n\n\nAdd missing data\nDropdown (no/row/column/all)\n\nAdd missing values counts?\n\n\nSummary function\nFree text\nYes\nN to count rows, but formula accepted\n\n\nSummary label\nFree text\n\nName of the summary\n\n\nFormat\nDropdown\n\nFormat of the summary\n\n\nAdd percentage\nDropdown (yes/no)\n\n\n\n\nAdd graph\nDropdown (values/percentage)\n\n\n\n\nFlip coordinates\nDropdown (yes/no)\n\nInverse x and y axis of the graph\n\n\n\n\nExample\nDefinition in the setup file:\n\nDisplay in the linelist :",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#time-series-analysis",
    "href": "reference/analyses_sheet.html#time-series-analysis",
    "title": "Define basic analyses",
    "section": "Time series Analysis",
    "text": "Time series Analysis\nTime series analyses and graphs are defined using 3 different tables:\n\none to define the table(s) (and the series to add to the graphs)\none to define the list of associated graphs\none to define the characteristics of graphs\n\nSee a diagram at the end of the section.\n\nTime series Analysis\n\nThe first table is used to define the different time series. It has 12 columns, and one line represents one summary per variable (ex: counts for the different types of outcomes; or median of the length of stay). If you take the option to add a total or missing values, or if the variable is categorical, the table created will have several columns.\nSeries ID: this is an auto-populate field; each row in this table is automatically assigned a series ID, which is an incremental value (1). This ID is used in particular to define graphs.\nSection: this is a free field which can be used to combine analyses on a theme in a single table, for example patient characteristics over time. Each section corresponds to a table in the linelist. They are displayed one above the other, and it is possible to navigate between them using the “Go to section” drop-down menu.\nTime variable (row): this is a static drop-down menu containing time variables. In other words, variables of type date.\nGroup by variable (column): this is a static drop-down menu containing the variables that can be analysed. In other words, variables with known modalities, i.e. choice_manual and choice_formula variables. It is also possible to leave this field empty, and define the analysis solely on the basis of a formula in the “Summary function” field.\nTitle (header): this is a calculated field. It is the name which will be displayed at the top of the table, above the corresponding analyses. It is made up of the summary label (described below), the label of the time variable (row) and the label of the variable to be analysed (Group by variable (column)).\nAdd missing data: this is a yes/no field which allows you to indicate whether you want to count missing data for the selected variable. If “yes” is selected, a column with the missing values will be added to the right of the other columns created for each mode of the variable to be analysed.\nSummary function: this is a free field in which to enter the formula corresponding to the desired analysis. The formula must always be written without the “=” sign and in English, whatever the language in which the setup file is written (see formula).\nOften the aim is to show the distribution of patients between the modalities of a variable, and the “N” function is sufficient. If the “Group by variable (column)” field is empty, the function will count the number of entries in the chosen time variable.\nSummary label: this is a free field which corresponds to the label used to create the “Title header” and which is used to label the column containing the results of the “summary function”.\nFormat: this is a static drop-down menu with a preselection of possible display formats. (see also Format)\nAdd percentage: this is a static drop-down menu with 3 options:\n\nNo: no percentage is added\nRow: there is an additional column to the right of each value listed to show the percentage according to the time scale. The percentage is calculated on the total number of patients in the row.\nColumn: there is an additional column to the right of each value listed to show the percentage according to the time scale. The percentage is calculated on the total number of patients in the column.\n\nAdd total: this is a yes/no field used to add a row at the bottom of the table in the LL with the totals for the entire period selected.\nTable Order: this is a read field which can be used to reorganise the order of analyses in the final table without having to modify the order of lines in the setup. By default, analyses are displayed from left to right in the order in which they are described in the Time series Analysis table in the setup.\n\n\n\n\n\n\n\n\n\nColumn\nType\nMandatory\nDetails\n\n\n\n\nSeries ID\n-\nAutomatic\n\n\n\nSection\nFree text\nYes\nGroup columns by section\n\n\nTitle\n-\nAutomatic\n\n\n\nAdd missing data\nDropdown (yes/no)\n\nAdd missing values counts?\n\n\nSummary function\nFree text\nYes\nN to count rows, but formula accepted\n\n\nSummary label\nFree text\n\nName of the summary\n\n\nFormat\nDropdown\n\nFormat of the summary\n\n\nAdd percentage\nDropdown (column/row/no)\n\n\n\n\nAdd total\nDropdown (yes/no)\n\n\n\n\nTable order\nFree text\n\n\n\n\n\n\n\nLabels for Time Series Graphs\n\nThe second Time Series table is used to define the titles and order of the graphs associated with the time series defined above.\nThe table has 3 columns:\n\nGraph title: this is a free field for naming the graph\nGraph order: this is a free field which allows you to organise the graphs in the desired order.\nGraph ID: this is an automatically calculated field, with the ID incremented by 1 on each line.\n\nOne line represents one graph.\n\n\n\nColumn\nType\nMandatory\nDetails\n\n\n\n\nGraph title\nFree text\nYes\nShort title\n\n\nGraph order\nFree text\nYes\n\n\n\nGraph ID\nAutomatic\nYes\n\n\n\n\n\n\nGraph on Time Series\n\nThis table is used to define the characteristics of each graph. It has 12 columns. One line represent one series to plot on a graph. A graph with the number of each outcome over time would thus be represented by as many lines as there are of types of outcomes (or as there are modalities that you wish to show on this graph).\nGraph title: this is a drop-down menu fed by the “Labels for Time Series Graphs” table. To define a graph, it must first be named in the previous table. Use the same graph title in different rows to indicate that several series should be on the same graph.\nSeries title: this is a drop-down menu fed by the “Time Series Analysis” table. It is used to link a graph to the characteristics of a group of series (variables to be displayed).\nGraph ID: this field is filled in automatically once the “Graph Title” has been selected. It searches for the Graph\nSeries ID: this field is automatically filled in once the “Series title” has been selected.\nGraph order: this field is filled in automatically once the “Graph title” has been selected. To change the order in which the graphs are displayed, simply change the order in the “Labels for Time Series Graphs” table; it is not necessary to change the order of the lines.\nTime variable (row): this field is automatically filled in once the “Series title” has been selected. It searches for the time variable defined for the time series.\nGroup by variable (column): this field is filled in automatically once the “Series title” has been selected. It searches for the variable to be calculated defined for the time series.\nChoices: this is a dynamic drop-down menu updated once the “Series title” has been selected. It will display the choices for the variable to be calculated.\nLabel: this is a free text column that contains le label corresponding to the choice, which will appear in the graph legend.\nPlot values or percentage: this is a static drop-down menu with two options: “values” or “percentages”, which lets you choose whether to display the results in the graph as values or percentages.\nChart type: this is a static drop-down menu with three options: “bar”, “line” or “dot”. This lets you choose between 3 pre-selected chart types (bar, line or dot). Chart display can be customised directly from the linelist.\nY-Axis: this is a static drop-down menu with two options: “left” or “right”, which lets you choose which side of the Y axis to display. This is particularly useful for displaying two different pieces of information on a single graph (e.g. Epicurve with the number of deaths in value and the CFR in %).\n\n\n\n\n\n\n\n\n\nColumn\nType\nMandatory\nDetails\n\n\n\n\nGraph title\nDropdown\nYes\nDefined in the previous table\n\n\nSeries title\nDropdown\nYes\nChoose which variable summary to plot (ex: counts for outcomes)\n\n\nGraph ID\n-\nAutomatic\n\n\n\nSeries ID\n-\nAutomatic\n\n\n\nGraph order\n-\nAutomatic\n\n\n\nTime variable (row)\n-\nAutomatic\n\n\n\nGroup by variable (column\n-\nAutomatic\n\n\n\nChoices\nDropdown (variable modality)\nYes\nChoose modality to plot (ex: deads)\n\n\nLabel\nFree text\n\nLabel of the modality\n\n\nPlot values or percentages\nDropdown (values/percentage)\nYes\n\n\n\nChart type\nDropdown (bar/line/point)\n\n\n\n\nY-axis\nDropdown (left/right)\n\n\n\n\n\n\n\nExample\n\nDefinition in the setup file:\n\nDisplay in the linelist:\n\n\n\n\n\nDiagrams",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#spatial-analysis",
    "href": "reference/analyses_sheet.html#spatial-analysis",
    "title": "Define basic analyses",
    "section": "Spatial Analysis",
    "text": "Spatial Analysis\n\nThe spatial analyses are described in a table with 11 columns. They are described in a similar way to the bivariate analyses, the difference being that the variables chosen for the rows are necessarily variables containing geographical data.\nSection: this is a free field used to define blocks of analyses on the same theme. It will also be possible to navigate between sections in the linelist using the “Go to section” drop-down menu.\nTable Title: this is a free field for entering the name of the table with the analyses. It should be fairly explicit and short.\nGeo/HF variable (row): this is a dynamic drop-down menu containing all variables of type hf or geo.\nN geo max: This is the maximum number of lines you want to see for each analysis. (e.g. if you want a top 10, enter 10).\nGroup by variable (row): this is a static drop-down menu containing the variables that can be analysed. In other words, variables with known modalities, i.e. choice_manual and choice_formula variables. If the field remains empty, we will just count the number of occurrences per modality of the chosen time variable and these are the Ns (defined with the “N geo max” variable).\nAdd missing data: this is a yes/no field used to indicate whether you want to count missing data for the selected variable.\nSummary function: this is a free field in which to enter the formula corresponding to the desired analysis. The formula must always be written without the “=” sign and in English, whatever the language in which the setup file is written (see formula).\nOften the aim is to show the distribution of patients between the modalities of a variable, and the “N” function is sufficient.\nSummary label: this is a free field which corresponds to the label which will be displayed above the results column.\nFormat: this is a static drop-down menu containing a preselection of possible display formats. (See also Format)\nAdd percentage: this is a yes/no field used to indicate whether you want to see the results as a percentage as well as a value. If yes, a “%” column will be added to the right of the “summary function” column in the linelist.\nAdd graph: this is a yes/no field used to indicate whether you want a vertical bar graph.\nIf the previous “Add percentage” option is set to “yes”, the percentage will be displayed on the secondary vertical axis of the graph.\nFlip coordinates: this is a yes/no field used to indicate whether you want the graphic to be displayed vertically or horizontally.\nIf the “Add percentage” and “Flip coordinates” options are set to “yes”, the graph will not contain the percentages, as the two options are incompatible and the vertical display of the graph will prevail.\nA “Note” message will be displayed in the “__checkRep” sheet.\n\nExample\nDefinition in the setup file: \nDisplay in the linelist:",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#spatio-temporal-analysis",
    "href": "reference/analyses_sheet.html#spatio-temporal-analysis",
    "title": "Define basic analyses",
    "section": "Spatio-Temporal Analysis",
    "text": "Spatio-Temporal Analysis\nSpatio-temporal analyses and graphs are defined using 2 different tables:\n\nA “Specification for Spatio-Temporal Analysis” table\nA “Spatio-Temporal Analysis” table\n\n\nSpecification for Spatio-Temporal Analysis\n\nThe table has 3 columns:\nSection: this is a free field which can be used to combine analyses on a theme in a single table, for example patient characteristics over time. Each section corresponds to a table in the linelist. They are displayed one above the other, and it is possible to navigate between them using the “Go to section” drop-down menu.\nN geo max: This is the maximum number of lines you want to see for each analysis. (e.g. if you want a top 10, enter 10).\nSpatial type: this is a static drop-down menu with two options, “geo” or “hf”. This defines the type of geographic variable to be used in the section (a geo variable or a health facility).\n\n\nSpatio-Temporal Analysis\n\nThe table has 10 columns:\nSection (select): this is a drop-down menu created automatically and fed by the “Specification for Spatio-Temporal Analysis” table.\nTime variable (row): this is a static drop-down menu containing time variables. In other words, variables of type date.\nGeo/HF variable (column): this is a drop-down menu created automatically and fed by the “Specification for Spatio-Temporal Analysis” table.\nN geo max: this field is automatically filled in on the basis of the section selected and defined in the previous “Specifications for Spatio-Temporal Analysis” table.\nTitle (header): this is a calculated field. It is the name which will be displayed at the top of the table, above the corresponding analyses. It is made up of the summary label (described below), the label of the time variable (row) and the label of the selected geographic variable (column).\nSpatial type: this field is automatically filled in on the basis of the section selected and defined in the previous “Specifications for Spatio-Temporal Analysis” table.\nSummary function: this is a free field in which to enter the formula corresponding to the desired analysis. The formula must always be written without the “=” sign and in English, whatever the language in which the setup file is written (see formula).\nOften you will just want to count the number of patients according to their origin or the facility consulted and see how it changes over time, in which case you simply use the N function.\nSummary label: this is a free field which corresponds to the label which will be displayed above the results column.\nFormat: this is a static drop-down menu with a pre-selection of possible display formats. (see also Format)\nAdd graph: this is a yes/no field used to indicate whether you want a vertical bar graph.\n\n\nExample\nDefinition in the setup file:\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "reference/analyses_sheet.html#footnotes",
    "href": "reference/analyses_sheet.html#footnotes",
    "title": "Define basic analyses",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAs in the dictionary, the function must be written in English, regardless of the language in which the rest of the setup is written.↩︎",
    "crumbs": [
      "About",
      "Reference",
      "Define basic analyses"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "OutbreakTools",
    "section": "",
    "text": "OutbreakTools is a set of solutions designed by Epicentre EpiDS team to quickly create linelists to collect field data during outbreaks. These linelists have a number of functionalities including descriptive analyses, buttons to migrate data to or from the linelist, or to import geographic data to better describe locations.\nOutbreakTools allow you to quickly develop these linelists without the need for advanced Excel skills or ad-hoc development, by creating a (glorified) dictionary and compiling it. If you have ever built a Kobo form or a Redcap database from a dictionary, this might sound familiar.\n\n\n\n Back to top"
  },
  {
    "objectID": "how_to/export_subset_geo.html",
    "href": "how_to/export_subset_geo.html",
    "title": "Export a subset of geographic columns",
    "section": "",
    "text": "The need: you need to create a MoH export with only the admin 3 and 4 columns.\nThe problem: in the set-up file Dictionary sheet, geographic columns are represented by one “geo” variable, that is translated in 4 columns in the generated linelist file (admin 1, 2, 3 and 4) with cascading dropdown menus. In the set-up file, if you indicate that this “geo” variable should be exported for a given export, the linelist export will contain the 4 admin levels columns (more if you choose to export p-codes, see the “Exports” sheet options in the set-up file).\nThe solution: you need to derive individual columns from the automatically created “geo” columns, and exports these only to your MoH export.\nHow does it works? The “geo” variable name is used to automatically name the 4 level columns in the linelist. For example, if the “geo” variable in the set-up file is called “origin”, four columns will be created in the linelist: adm1_origin, adm2_origin, adm3_origin, adm4_origin.\nEven though these columns do not appear in the setup file, they will be created in the linelist! This means that you can reference them and use them in formulas in other parts of the Dictionary sheet, like you would do for any other variable defined in that sheet.\nAn example, with a column named “residence”: the green variable is the “geo” variable. It triggers the creation of 4 columns in the linelist. You will export it for a MSF export, but maybe you don’t need to export all the fours columns in an MoH export. The blue variables are calculated variables (formula control) that refer to the geo columns that are automatically created. You can decide for each of these individually to export them or not in a given export.\n\n\n\n\n\nBecause the variable do not appear in the setup file, the checkRep check will raise a warning, saying that the formula will fail (because it references a variable that seem not to exist), but in this specific instance, it is wrong, the columns will be created, and the formula will thus work in the linelist.\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "About",
      "How To",
      "Export a subset of geographic columns"
    ]
  },
  {
    "objectID": "getting_started/download.html",
    "href": "getting_started/download.html",
    "title": "Obtain OutbreakTools files",
    "section": "",
    "text": "Go to the OutbreakTools github repo, scroll down to the README and click on the yellow button to donload .zip archive that contains the file you need.\n\nSave the archive locally on your computer and unzip it.",
    "crumbs": [
      "About",
      "Getting Started",
      "Obtain OutbreakTools files"
    ]
  },
  {
    "objectID": "getting_started/download.html#download-the-outbreaktools-archive",
    "href": "getting_started/download.html#download-the-outbreaktools-archive",
    "title": "Obtain OutbreakTools files",
    "section": "",
    "text": "Go to the OutbreakTools github repo, scroll down to the README and click on the yellow button to donload .zip archive that contains the file you need.\n\nSave the archive locally on your computer and unzip it.",
    "crumbs": [
      "About",
      "Getting Started",
      "Obtain OutbreakTools files"
    ]
  },
  {
    "objectID": "getting_started/download.html#install-the-oubreaktools-files",
    "href": "getting_started/download.html#install-the-oubreaktools-files",
    "title": "Obtain OutbreakTools files",
    "section": "Install the OubreakTools files?",
    "text": "Install the OubreakTools files?\nThe solution is based on VBA scripts in Excel files, so there is nothing to install.\nYou should however authorise VBA macros in Excel so that the files work as expected (or at all, in fact).\nThe archive contains several timestamped files:\n\nsetup-YYYY-MM-DD.xlsb: an empty setup file\ndesigner_main-YYYY-MM-DD.xlsb: the designer file that is used to compile the setup\n_ribbontemplate_main-YYYY-MM-DD.xlsb: a template file containing information used during compilation\nrun_designer_on_windows.R and rundesigner.vbs: files that can be used to compile from R (experimental and yet undocumented)",
    "crumbs": [
      "About",
      "Getting Started",
      "Obtain OutbreakTools files"
    ]
  },
  {
    "objectID": "getting_started/compile.html",
    "href": "getting_started/compile.html",
    "title": "Compile a linelist",
    "section": "",
    "text": "Now it is time to use the designer\n\n\n\n Back to top",
    "crumbs": [
      "About",
      "Getting Started",
      "Compile a linelist"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Outbreak Tools is a set of solutions designed to provide a rapid response to epidemics. It comprises several packages, divided as follows:\n\nData capture and analysis in the field\nData cleaning and management\nVisualization\n\nIn this document, we will concentrate on the “data capture and analysis in the field” package. The aim of this solution is to quickly create linelists including basic analyses for use in the field, without the need for advanced Excel skills or ad-hoc development. This solution is based on three Excel files:\n\nThe setup file: exclusively used to define linelist specifications (in other terms, a glorified dictionary).\nThe designer file: reads the setup file and translates it into a new linelist file.\nThe linelist file: the file generated by the designer, containing all the characteristics described in the setup file. It is the file sent to the field for data entry and an initial level of data analysis.\n\n\n\nsetup file\nThe setup file is a sort of advanced dictionary, which describes the various sheets of the linelist to be created, in a predefined and standardised format.\nThe linelists created from this setup file will contain several sheets:\n\nLinelist sheet(s) for data entry\n\nAnalysis and graph sheets\n\nCustomisation sheets for custom drop-down menus and the geographic base\n\nThe setup file itself contains several sheets/tabs for defining the linelist to create, and for managing languages:\n\n\n\n\n\n\n\n\nSet-up sheet\nDescription\nCorrespondence in linelist file\n\n\n\n\nDictionary\nDescribes in full all the variables to be collected, the expected format, etc.\nData entry sheets (typically, Info sheet and Linelist sheets)\n\n\nChoices\nDefines the categories/levels accepted for certain variables, in the form of a list\nDrop-down menus in linelist sheets\n\n\nExports\nDefines the characteristics of exports, such as protection, choice of sheets to export and export names.\nExport button in the Outbreak Tools ribbon\n\n\nAnalysis\nDescribes the expected analyses in tabular form, by selecting the variables and indicating the formulas to be applied.\nAnalysis sheets\n\n\nTranslation\nAutomatically displays the list of strings of text/fields to be translated and adds new columns where the user can provide translated text in a desired language (one column = one language).\nChoice of linelist language when created (designer)\n\n\n\nThe setup file has been created in English, its entire structure is in English, but it is possible to fill it in French or in any other language you wish. The language of the final linelist file will be chosen when it is generated by the designer file, according to the languages available in the translation sheet of the setup file.\n\n\n\n\n\n\nWarning\n\n\n\nPlease note: It is not possible to write outside tables, nor to change the structure of tables.\n\n\n\n\n\n\n\n\nTip\n\n\n\nIt is possible to copy and paste, but the dimensions of the initial table (copied) must match those of the target table (pasted).\n\n\n\n\nSetup option Ribbon\nThere is a special Setup Options ribbon that contains functionalities related to the setup file. These functionalities will be described in the “OutbreakTools ribbon section”.\n\n\n\n\n\n\n\nTip\n\n\n\nThe designer and linelist file created also contain their own OutbreakTools ribbon section, look it up when you open them.\n\n\n\n\nTypical workflow\n\nCreate the data dictionary: go back and forth, filling the Dictionary and Choices sheets to define the data entry sheets of the linelist (at minima a metadata sheet and a main linelist sheet)\nDefine the exports: define the number of exports you want and their metadata on the Exports sheet, and fill the dedicated Export columns in the Dictionary sheet\nDefine the analyses in the Analysis sheet\nAdd new translations if you wish to, in the Translations sheet\n\nYou can check for errors between any of these steps (see the “OutbreakTools” ribbon section of this document)\n\nGenerate the linelist thanks to the designer file. Test it.\nRepeat steps 1 to 5 until the linelist works as expected. The rest of this guide will walk you through the sheets, the tables in it and the ribbon buttons.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "getting_started/create_dic.html",
    "href": "getting_started/create_dic.html",
    "title": "Create dictionary",
    "section": "",
    "text": "Download the files from github to get the most updated files. Take the empty setup file.\n\nCreate the data dictionary: go back and forth, filling the Dictionary and Choices sheets to define the data entry sheets of the linelist (at minima a metadata sheet and a main linelist sheet)\nDefine the exports: define the number of exports you want and their metadata on the Exports sheet, and fill the dedicated Export columns in the Dictionary sheet\nDefine the analyses in the Analysis sheet\nAdd new translations if you wish to, in the Translations sheet\n\nYou can check for errors between any of these steps (see the “OutbreakTools” ribbon section of this document)\n\nGenerate the linelist thanks to the designer file. Test it.\nRepeat steps 1 to 5 until the linelist works as expected. The rest of this guide will walk you through the sheets, the tables in it and the ribbon buttons.",
    "crumbs": [
      "About",
      "Getting Started",
      "Create dictionary"
    ]
  },
  {
    "objectID": "getting_started/workflow.html",
    "href": "getting_started/workflow.html",
    "title": "General workflow and files",
    "section": "",
    "text": "Follow these steps to create a linelist with OutbreakTools:\n\nFill a setup file to define linelist specs\nCompile the setup file using the designer file\nTest the created linelist\nCorrect bugs in the setup file\nRince and repeat until the linelist is functional",
    "crumbs": [
      "About",
      "Getting Started",
      "General workflow and files"
    ]
  },
  {
    "objectID": "getting_started/workflow.html#workflow",
    "href": "getting_started/workflow.html#workflow",
    "title": "General workflow and files",
    "section": "",
    "text": "Follow these steps to create a linelist with OutbreakTools:\n\nFill a setup file to define linelist specs\nCompile the setup file using the designer file\nTest the created linelist\nCorrect bugs in the setup file\nRince and repeat until the linelist is functional",
    "crumbs": [
      "About",
      "Getting Started",
      "General workflow and files"
    ]
  },
  {
    "objectID": "getting_started/workflow.html#setup-file",
    "href": "getting_started/workflow.html#setup-file",
    "title": "General workflow and files",
    "section": "Setup file",
    "text": "Setup file\nThe setup file is an excel file that describes the various sheets of the linelist to be created, in a predefined and standardised format. It allows you to specify:\n\nthe structure of the data entry sheets of the linelist\nthe variables for all data entry tables\nthe basic analyses to be included in the linelist (uni and bivarites, epicurves, geo data etc.)\n\npersonalised exports\ntranslations to create linelists in several languages\n\nMost of the work developping a linelist is spent filling a setup file template to define all the aspects of the linelist you want to create.\n\n\n\n\n\n\n\n\nSetup file sheet\nDescription\nCorrespondence in linelist file\n\n\n\n\nDictionary\nDescribes all the variables to be collected, their format, etc.\nData entry sheets (typically, Info sheet and Linelist sheets)\n\n\nChoices\nDefines the categories/levels accepted for categorical variables, in the form of a list\nDropdown menus in linelist sheets\n\n\nExports\nDefines the characteristics of exports, such as protection, choice of variables or sheets to export and export names\nExport button in the OutbreakTools ribbon\n\n\nAnalysis\nDescribes the analyses to include is the linelist in tabular form, by selecting the variables and indicating the formulas to be applied\nAnalysis sheets\n\n\nTranslation\nAutomatically displays the list of strings of text/fields to be translated and adds new columns where the user can provide translated text in a desired language (one column = one language)\nChoice of linelist language when created (designer)",
    "crumbs": [
      "About",
      "Getting Started",
      "General workflow and files"
    ]
  },
  {
    "objectID": "getting_started/workflow.html#designer-file",
    "href": "getting_started/workflow.html#designer-file",
    "title": "General workflow and files",
    "section": "Designer file",
    "text": "Designer file\nThe designer is another excel file, that contains the code to build a linelist from a setup file.\nWhen the setup file is ready (or at least a first draft is), you load it into a designer, fill a couple of fields1 and let the designer build the linelist.",
    "crumbs": [
      "About",
      "Getting Started",
      "General workflow and files"
    ]
  },
  {
    "objectID": "getting_started/workflow.html#footnotes",
    "href": "getting_started/workflow.html#footnotes",
    "title": "General workflow and files",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWhat is the name of the created linelist, where to save it, should it be password protected and if yes, which password etc.↩︎",
    "crumbs": [
      "About",
      "Getting Started",
      "General workflow and files"
    ]
  },
  {
    "objectID": "how_to/link_tables.html",
    "href": "how_to/link_tables.html",
    "title": "Create linelists with more than one entry sheet",
    "section": "",
    "text": "You want the linelist to contain several data entry sheets. The important thing to think about is how the tables should be linked, if at all.",
    "crumbs": [
      "About",
      "How To",
      "Create linelists with more than one entry sheet"
    ]
  },
  {
    "objectID": "how_to/link_tables.html#independent-data-tables",
    "href": "how_to/link_tables.html#independent-data-tables",
    "title": "Create linelists with more than one entry sheet",
    "section": "Independent data tables",
    "text": "Independent data tables\nIf you need to create two independent data tables1, just use different sheet names in the Dictionary sheet.\n\n\n\n\n\n\nNote\n\n\n\nTechnically, a linelist with an “Info” and a “Patient linelist” sheet already has two entry sheets, one with a 1-dimension table and one with a 2-dimensions table.\nSince the two tables are created independently, you could have two sheets with 2-dimensions table.",
    "crumbs": [
      "About",
      "How To",
      "Create linelists with more than one entry sheet"
    ]
  },
  {
    "objectID": "how_to/link_tables.html#non-independent-tables",
    "href": "how_to/link_tables.html#non-independent-tables",
    "title": "Create linelists with more than one entry sheet",
    "section": "Non independent tables",
    "text": "Non independent tables\nSometimes you need to refer to data from another table, whether it is to use in a formula, to copy data or to populate a dropdown menu.\n\nRefer to a single value in a formula\nIt is straightforward to use the values of vlist1D variable in a formula: just use the name of the variable in another formula2.\nExample: the linelist user wants a variable with the name of the health structure in the data but in your setup, one site fills one excel file. In this case, you can create a calculated column that gets the name of the facility from a metadata sheet so that data encoders do not have to fill the name of the health structure again and again and again:\n\nIF(ISBLANK(case_id), ““, info_facility_name)\n\nSee the page on formulas and formulas controls\n\n\nLink two tables\nA more complex situation is when you have two 2-dimensions tables that are not independent. In this case, the tables should at minima be linked by a key.\nExample of a user case:\n\na main data entry sheet with general patient data (e.g. a Patient linelist sheet)\na secondary entry sheet with additional variables for a subset of patients (e.g. readmission variables or extensive lab testing).\n\nIn this case, the natural way to link the tables is to have the ID of the patient in both tables.\n\nConstrain possibles values for patient IDs in the secondary table with list_auto\nIn the user case above, the patients from the Readmission sheet are a subset from the Patient linelist sheet so we expect the IDs from Readmission to match the ones from Patient linelist.\nThe minimal (unsafe) option is to have two free text patient ID columns, one in each table, where data encoders enter IDs manually. This process however increases the risk of typing error and thus of merging nightmare.\nA safer way is to create a categorical variable in the Readmission sheet whose dropdown menu is populated by values present in the case_id column of the Patient linelist sheet. As the data encoder can only choose from existing patients from the Patient linelist sheet, the opportunity for encoding error and thus unmatched patients is greatly reduced.3\n\n\n\nUse of list_auto to link two columns\n\n\nSeethe section on list_auto and its control for a description on how to use the list_auto control.\n\n\nImport values from the other table with VALUE_OF\nIn addition to key columns to be able to join the tables, it might be desirable to bring some of the patient data in the secondary table, to calculate new variables, or just to facilitate reading and understanding without having fill the value on each line.\nFor example, we might want to bring in the name and surname of the patient, without entering it again, or the date of exit, to be able to calculate the number of days between the exit of the first admission and the date of readmission.\nThe custom function VALUE_OF can do that. It works sort of like a LOOKUP function, except we provide variable names, and it matches the value you need.\nIt takes three arguments, all variable names:\n\nVALUE_OF(key_variable1, key_variable2, variable_values)\n\n\nkey_variable1: the list_auto in the current sheet (the key column that contains IDs, e.g. readmission_id)\n\n\nkey_variable2: the source of the list_auto in the other sheet (the IDs from the main sheet, e.g. case_id)\n\n\nvariable_values: the variable which values we want to import.\n\n\n\n\nIllustration of the use of VALLUE_OF\n\n\n\n\n\n\n\n\nWarning\n\n\n\nkey_variable2 and variable_values must be on the same sheet or the function will return nothing.\n\n\nThe function matches the values from columns key_variable1 and key_variable2, and returns values from variable_values column at the corresponding row.\n\n\n\n\n\n\nNote\n\n\n\nIf the function finds more than two matches, it will return the values from the first match (the first line found).",
    "crumbs": [
      "About",
      "How To",
      "Create linelists with more than one entry sheet"
    ]
  },
  {
    "objectID": "how_to/link_tables.html#footnotes",
    "href": "how_to/link_tables.html#footnotes",
    "title": "Create linelists with more than one entry sheet",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nExample: a sheet containing patient data and a sheet containing bed occupancy data↩︎\nThese variables can take only one value, see the different sorts of tables for more information.↩︎\nIf data are exported in R or Stata, you will be able to merge/join them extremely easily with the two IDs variables.↩︎",
    "crumbs": [
      "About",
      "How To",
      "Create linelists with more than one entry sheet"
    ]
  },
  {
    "objectID": "Options.html",
    "href": "Options.html",
    "title": "OutbreakTools documentation",
    "section": "",
    "text": "A ‘Setup Options’ menu has been specially created in the top ribbon, bringing together all the functions specific to the setup file:",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "Options.html#tables-management",
    "href": "Options.html#tables-management",
    "title": "OutbreakTools documentation",
    "section": "Tables Management",
    "text": "Tables Management\n\nAdd rows to tables in current sheet\n\n\n\n\n\nIf you need more rows to define the linelist, choices or analyses, use the “Add rows to tables in current sheet” button.\nWhen this functionality is used in the analysis definition page, you can use the drop-down menu in cell A1 to choose whether you want to apply the functionality to all tables or just one in particular.\n\n\n\n\n\n\n\nResize tables in current sheet\n\n\n\n\n\nTo ensure that there are no empty rows in a table, click on the “Resize tables in current sheet” button.\nWhen this functionality is used in the analysis definition page, you can use the drop-down menu in cell A1 to choose whether you want to apply the functionality to all tables or just one in particular.\n\n\n\n\n\n\n\nRemove all filters\n\n\n\n\n\nIf you have used filters and want to display everything again, you can use the “Remove all filters” button. This will return the table to its initial state.",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "Options.html#translations",
    "href": "Options.html#translations",
    "title": "OutbreakTools documentation",
    "section": "Translations",
    "text": "Translations\nSee the Translations section above.",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "Options.html#import",
    "href": "Options.html#import",
    "title": "OutbreakTools documentation",
    "section": "Import",
    "text": "Import\n\n\n\n\n\n\nImport data from another setup\nYou can import data from an older setup file into a new blank file. This can be useful if a file is broken or corrupted, or if the setup template has been upgraded (new column, new function, debugged, etc).\n\n\nImport data from disease\nThis button is used to import a disease from a disease Master file. This file is being piloted for Epinetwork discussions.",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "Options.html#advanced",
    "href": "Options.html#advanced",
    "title": "OutbreakTools documentation",
    "section": "Advanced",
    "text": "Advanced\n\n\n\n\n\n\nCheck current setup for errors\nThe setup file comes with a series of checks on its content to help you debug your dictionary. After adding major components to your setup file, or before compiling a linelist with the designer, you can (should) click on the button “Check current setup for errors” to see any errors in the “__checkRep” sheet.\nThere is a table for each sheet or section (in the case of analyses), with the following three columns:\n\n“Incoherences Type” preceded by the name of the sheet,\n“Where?”, which shows the name of the sheet or section and the line where the incoherence is located,\n“Details”, which gives details of the incoherence.\n\nThere are several types information that could appear in the Incoherence column:\n\nInfo (in grey): this is not strictly speaking an inconsistency, but simply a piece of information about something that will not block the compilation of the linelist.\nWarning (in yellow): these are problems that need to be fixed because there is a real inconsistency. It could be an error in a formula, for example.1\nNote (in blue): this is something that has been defined in the setup, but will not be applied, and is therefore not blocking. For example, in the analyses, certain choices are contradictory by design, such as the display of percentages, which is not authorised when you choose to invert the display of the table (horizontal display instead of vertical).\n\n\n\n\n\n\n\n\nClear data in current setup\nThis feature allows you to delete all the data entered in the setup file.",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "Options.html#dev",
    "href": "Options.html#dev",
    "title": "OutbreakTools documentation",
    "section": "Dev",
    "text": "Dev\n\n\n\n\n\nThese functions are for the use of developers only, you can ignore them.",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "Options.html#footnotes",
    "href": "Options.html#footnotes",
    "title": "OutbreakTools documentation",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote that the checkup does its best, but some formula errors can be missed and create problems in your formulas. Always test the calculated colums after compilation!↩︎",
    "crumbs": [
      "About",
      "Tables Management"
    ]
  },
  {
    "objectID": "reference/choices_sheet.html",
    "href": "reference/choices_sheet.html",
    "title": "Define variable categories",
    "section": "",
    "text": "This sheet is used to define the drop-down menus categories to be inserted in certain variables, or the possible values for “choice_formula” type variables.\nThere is only one table on this sheet, where you can define as many lists as is needed for dropdown menus variables. In this table, a list is represented by several lines, one line for each value in the drop-down list. Different lists are written one below the other.",
    "crumbs": [
      "About",
      "Reference",
      "Define variable categories"
    ]
  },
  {
    "objectID": "reference/choices_sheet.html#list-name",
    "href": "reference/choices_sheet.html#list-name",
    "title": "Define variable categories",
    "section": "List Name",
    "text": "List Name\nThis is a free text field used to define a drop-down list. Lines with the same name filled belong to the same list. This name is used in the Dictionary sheet to identify the drop-down list to be used for a given variable.\n\n\n\n\n\n\nNote\n\n\n\nWith the exception of lists used for “choice_custom” type variables, it is recommended not to leave any blanks in the list name. Instead, replace them with “_”, for example.\n\n\n\n\n\n\n\n\nTip\n\n\n\nIt is not mandatory, but we advise that you begin all your list names by “list_” to easily separate them from variable names in the dictionary.",
    "crumbs": [
      "About",
      "Reference",
      "Define variable categories"
    ]
  },
  {
    "objectID": "reference/choices_sheet.html#ordering-list",
    "href": "reference/choices_sheet.html#ordering-list",
    "title": "Define variable categories",
    "section": "Ordering list",
    "text": "Ordering list\nThis is a free text field. Fill in integers to define the order in which the options are displayed in the drop-down menu.",
    "crumbs": [
      "About",
      "Reference",
      "Define variable categories"
    ]
  },
  {
    "objectID": "reference/choices_sheet.html#label",
    "href": "reference/choices_sheet.html#label",
    "title": "Define variable categories",
    "section": "Label",
    "text": "Label\nThis is a free text field used to list the different values to be displayed in the drop-down menus.\n\n\n\n\n\n\nNote\n\n\n\nCategories names should not begin with a “&lt;” or a “&gt;”.",
    "crumbs": [
      "About",
      "Reference",
      "Define variable categories"
    ]
  },
  {
    "objectID": "reference/choices_sheet.html#example",
    "href": "reference/choices_sheet.html#example",
    "title": "Define variable categories",
    "section": "Example",
    "text": "Example\nDefinition in the set-up file:\n\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Define variable categories"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html",
    "href": "reference/dictionary_sheet.html",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "",
    "text": "The dictionary is stored in an Excel table divided into several sections, which define the different sheets that will be part of the Excel linelist produced.\nEach line corresponds to a variable and includes most the characteristics of that variable.\nThe dictionary is divided into the following sections:",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#variable-names-and-labels",
    "href": "reference/dictionary_sheet.html#variable-names-and-labels",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Variable names and labels",
    "text": "Variable names and labels\nThis first part lists all the variables you want to have in the final linelist.\n\n\nVariable Name\n\nThis is a free text field used to identify the variable. This name can be used to refer to this variable in formulas or in the Analyses sheet.\nAfter you generate the linelist file, the variable name info will be found in the formula bar in the grey cells from the eigth row of the linelist sheet, or in the cell name zone for cells of the Info sheet.\nVariable names rules:\n- Names must be unique in the setup file, even if the variables are on different sheets. If two or more variables were to have the same name, the second occurrence will automatically be suffixed with the value “1”; if there is a third, it will be suffixed with the value “2”, and so on.\n- Names must be at least 4 characters long to be valid.\n- Names should not contain special characters (except for “_”).\n- Names will be automatically converted to lowercase during compilation.\n\n\n\n\n\n\nTip\n\n\n\nAs a general advice, try to create short but explicit names.\n\n\n\n\n\n\n\n\nTip\n\n\n\nTo ensure that variable names are unique, you can add the name of the sheet in which the variable will appear as a prefix, or use numbers.\n\n\n\n\n\n\n\n\nTip\n\n\n\nWe recommend that you do not leave any blanks in the variable name. Instead, replace them with “_”.\n\n\n\n\nMain Label\n\nThis is a free text field that defines the variable label. Labels can be more descriptive and longer than names, but we recommend to keep it moderately short for legibility reasons. The main label appears in black and bold in the linelist file.\nIt cannot be modified by the end user (with one exception, see the “Editable section” below).\n\n\n\n\n\n\nNote\n\n\n\nTo add more details, you can use the following fields: “Sub Label” and “Note” (see below).\n\n\n\n\nDev Comment\n\nThis free text column is for the sole benefit of the setup file creator (in all probability, you), to add purely technical or practical information. It is not read by the designer and does not affect the generated file.\n\n\n\n\n\n\nNote\n\n\n\nOne of the author of this wiki uses these tags:\n\nFormat: calculated columns created solely for applying conditional formatting (see section on “Conditional formatting” below). These columns are very specific, and pure format. Tagging them helps to quickly make sure that they are never exported\nMoH: columns created when a general setup is adapted to a specific country, by adding exports to a specific MoH format. Usually, we need to create some calculated columns that match the MoH export (recoding levels, or perhaps merging information of several variables…). I like to keep track of which columns are from the general setup and which are specific adaptations.\nWHO/Epinetwork: sometimes I want to keep the information that a column is here because it comes from the Epinetwork or the WHO CRF, and should probably not be modified.\nBoilerplate: calculated columns that are needed for graphs, or because the information is important (such as epiweeks). These columns are often hidden, but not necessarily.\n\n\n\nFeel free to use this column in a way that helps you work!\n\n\nEditable Label\n\nThis is a yes/no column. If the value is “yes”, the label of the variable in the linelist can be modified by the user. If the value is “no” or if the field remains empty, the variable label in the linelist will be protected.\n\n\nSub Label\n\nThis is a free text field used to add a brief description under the variable label, such as the format in which a date is expected, a unit, or any other information to help with filling the variable in.\nIn the linelist, the sub-label appears just below the main label, in blue and slightly smaller font. It cannot be modified by the end user.\n\n\n\n\n\n\nNote\n\n\n\nThe sublabels “Calculated” and “Custom label” are added automatically, no need to add them manually.\n\n\n\n\n\n\n\n\nTip\n\n\n\nCommon sublabels include the following:\n\nYes / No\nYes / No / Unk.\nFree text\nThe format of your date (ex: DD/MM/YYYY)\n\n\n\n\n\nNote\n\nThis is a free text field which content is added to the linelist as a comment on the corresponding cell. The comment in the linelist can be read by hovering the cursor over the cell. It cannot be modified by the end user.\n\n\nExample\nDefinition in the setup file:\n\nDisplay in the linelistfile:",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#sheets-and-sections",
    "href": "reference/dictionary_sheet.html#sheets-and-sections",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Sheets and sections",
    "text": "Sheets and sections\n\nThis section of the dictionary organises variables within sheets and tables, and thus creates part of the structure of the linelist.\nAs a general rule, there is one table per data entry sheet created, but the structure of the table (i.e. the organisation of the variables) can vary.\n\nSheet Name\n\nThis is a free text field that contains the name of the sheet in which the variable will appear.\nIn general, your linelists will contain at least a data entry sheet, and a metadata/general information data sheet.\n\n\n\n\n\n\nNote\n\n\n\nMore sheets can be created, either automatically (such as the “Instruction” sheet), or by defining analyses in other parts of the setup file.\n\n\n\n\nSheet Type\n\nThis is a drop-down menu field used to define the type of table contained in the sheet. There are 2 options:\n\nvlist1D1: corresponds to a table built vertically, so the variables labels appear in columns, and only one entry is expected for each variable. This type of sheet is used to collect general information about the facilities or data collection.\nhlist2D2: corresponds to a horizontally constructed table, so the variables labels appear in a row, and several entries are possible for each variable. This type of sheet is used to collect patient data.\n\n\n\n\nMain Section\n\nThis is a free text field used to define the name of the main section in which the variable is located. This makes it possible to organise variables by theme to make data entry and navigation easier.\nIn the linelist file, the main sections appear in a darker colour in rows or columns, depending on the type of table (dark blue in ?@sec-sheet-sections-example). They cannot be modified by the end user.\n\n\n\n\n\n\nTip\n\n\n\nTo make the dictionary easier to read, we recommend that you group (write one below another) the variables of a same sheet and a same section.\n\n\n\n\nSub Section\n\nThis is a free text field that allows you to further refine the organisation of variables in the table by creating a second level of grouping.\nIn the linelist file, the sub-sections appear in a lighter colour in the row or column, depending on the type of table (light blue in ?@sec-sheet-sections-example). They cannot be modified by the end user.\n\n\nExample\n\nvlist1D\nDefinition in the setup file:\n\nDisplay in the linelist file:\n\n\n\nhlist2D\nDefinition in the setup file:\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#properties",
    "href": "reference/dictionary_sheet.html#properties",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Properties",
    "text": "Properties\nThe properties section is as follows:\n\n\nStatus\nThis is a drop-down field that contains four options for defining the visibility of the variable:\n\n“mandatory”: variable displayed by default, it cannot be hidden in the linelist\n“optional, visible”: variable displayed by default, it can be displayed or hidden by the linelist user\n“optional, hidden”: variable hidden by default, it can be displayed or hidden by the linelist user\n“hidden”: variable hidden by default, it cannot be displayed in the linelist\n\nVariables can be shown or hidden using the Show/Hide button in the linelist file.\n\nExample\nDefinition in the setup file:\n\nDisplay in the linelist file:\n\n\n\n\n\n\n\n\nNote\n\n\n\n“Mandatory” variables in the setup file appear as “Mandatory” in the “Show/Hide” pop up, and cannot be hidden.\n1\nThe “optional, hidden” variables in the setup file appear as “Hidden” (by default). However, the user can change the status by choosing “Show”, in which case the column will become visible. \n2 \n3\nThe “Notification year” variable does not appear in the list of variables because it is in “hidden” status in the setup file.\nThe “optional, visible” variables in the setup file appear as “Displayed” (by default). However, you can change the status by choosing “Hide”, in which case the column will no longer be visible.\n4 \n\n\n\n\n\nRegister Book\n\nThis is a yes/no drop-down menu field used to predefine the variables to be included in the register to be printed. This is not mandatory and can be managed later, directly in the linelist file.\n\n\nPersonal Identifier\n\nThis is a yes/no drop-down menu field that indicates that the variable contains personal data (such as names, phone numbers etc.).\nThis column has to uses: - it allows the setup developer to quickly identify variables containing personal data in its dictionary\n- it is used to remove variables automatically from the exports if such a behaviour is needed (see the Exports sheet).\n\n\nThinking about variables\nThere are many ways of thinking about variables and of classifying them.\nIn general we can distinguished between input variables, where the user enters raw data, and calculated (or derived) variables, which require no input. Both of them can be created in OutbreakTools.\nIndependently of this distinction, a variety of variables types can exist, containing numbers or text in various forms. In Excel, we will often use the types integer, decimals, dates and text.3. See the section on ?@sec-var-type for more information.\nFor input variables, you could think of two ways of entering data: a “free” approach, where user can enter the value of their choice, and a controlled (constrained) approach, where the values the user can enter are limited. In Excel, this is generally implemented through dropdown menus from which the data encoder selects a value. In OutbreakTools, there have several ways of building dropdown menus, depending on whether you know the categories in advance or not. This is what we call “variable control”. Learn more about it in the ?@sec-var-control.\nFinally, many software allow the user to set the way the data is displayed, which we here call format. For example:\n- The date first of January of 2023 can be displayed as “01/01/2024”, or “1/1/24” or 1-Jan-24” etc.\n- The number “1” could be displayed as “1” simply, or “001”\n- The number 0.01 could be displayed with different levels of rounding, or even as “10%” if the column contains proportions that can be displayed as percentages.\nLearn more about format in ?@sec-var-format\n\n\nVariable Type\n\nThis column proposes a drop-down menu field containing four options for defining the type [^which is sometimes called class in some softwares] of each variable:\n\nText: creates a column of text [^also called character string in some softwares]. The entry of the text may be free or constrained by a dropdown menu, see the ?@sec-var-control section below.\nDate: creates a date column, whose exact format is defined in the next column, ?@sec-var-format. The default format is jj-mmm-aaaa.\nInteger: creates an integer column\nDecimal: creates a column with decimal numbers. The number of digits after the decimal point is defined in the following ?@sec-var-format column.\n\n\n\n\nVariable Format\n\nThis field is used to specify the format of the variable (which depends on its type).\nThere is a predefined drop-down list with common options, but you can enter any format by hand, as long as it is written in Excel syntax.\n\nExample: for an integer to appear with at least 2 characters, enter the format: # #00\nNote that the default data format is jj-mmm-aaaa.\n\n\nControl\n\nThis is a dropdown field containing nine options for defining variables that are not simple free entry variables:\n\nchoice_manual\nchoice_custom\nchoice_multiple\nlist_auto\ngeo\nhf\nformula\ncase_when\nchoice_formula\n\nThese options can be broadly classified in three sorts of variables to be created:\n\n\n\n\n\n\n\n\nSort of variable\nControls\nData entry in the linelist\n\n\n\n\nCategorical\nchoice_manual, choice_custom, choice_multiple, list_auto\nDropdown menu\n\n\nGeo-related columns (a special case of categorical)\ngeo, hf\nGeoHelper or dropdown menu\n\n\nCalculated\nformula, choice_formula, case_when\nNo user input needed in these columns\n\n\n\n\n\nDropdown menu variables\nThis table summarises the different options:\n\n\n\n\n\n\n\n\n\nControl\nchoice_manual\nHow to populate the dropdown menu?\nPredefined values\nWhere are values defined?\nSetup file, in the “Choice” sheet\nData entry in the linelist | =====================================================================================+ One value selected from a dropdown menu |\n\n\n\n\nchoice_multiple\nPredefined values\nSetup file, in the “Choice” sheet\nSeveral values selected from a dropdown menu |\n\n\nchoice_custom\nUser-defined values (but see details)\nLinelist file, in the “Custom dropdown” sheet\nOne value selected from a dropdown menu |\n\n\nlist_auto\nUser-defined values but from another data column | Linelist file, in another column | One value, selected from a dropdown populated by the values of another variable\n\n\n\n\nChoice_manual\nThis control creates a categorical variable with a static dropdown menu in the linelist, from which one value can be selected. The authorised values from the dropdown menu are defined in advance in the setup and cannot be modified by the users of the linelist (hence the “static”).\nIn the setup file, we define these values in a list stored in the “Choices” sheet, and fill the name of that list in the column “Control details” column (see ?@sec-var-control-details section).\n\n\nChoice_multiple\nThis control is similar to the choice manual, in that it creates a static drop-down menu in the linelist from predefined values entered in the setup.\nThe difference is that in the created linelist file, the user can use the dropdown menu several times to select multiple values. These values will be concatenated and stored as a chain of character. By default, the separator is a coma (“,”), but you can modify this in the control column. For example, entering choice_multiple(“_”) would use the character “_” to separate values instead of “,”.\nExample: if the user select “Azythromicin”, then “Ampicilin” from a dropdown menu, the value “Azythromicin, Ampicilin” will be stored in the cell.\n\n\n\n\n\n\nNote\n\n\n\nA choice_multiple column cannot be used in the Analyses sheets as the designer cannot predict the number of combinations the user will create, and thus cannot create tables with appropriate size.\n\n\n\n\nChoice_custom\nThis control creates a dynamic dropdown menu in the linelist, but contrary to the previous controls, the values are not (necessarily) predefined in the setup, but instead defined by the user. This control is useful for variables where one would like to enforce standardization of values, but the values to encode are not known in advance.\nExample: you wish to create a column containing the name of facilities patients can be transferred to. The names of these facilities is site dependent, thus unknown in advance.\nUsing the choice_custom control will create a table in the “Custom dropdown” sheet in the linelist where the user can fill-in values to populate the dynamic, customised drop-down menu.\n\n\n\n\n\n\nTip\n\n\n\nWhile by default the dropdown menu created is empty, it is possible to prefill it by filling the “Control Details” column with a list of choices, like for the other types of dropdowns menus (see ?@sec-var-control-details section). The table in the “Custom dropdown” sheet of the linelist will still created and future users will be able to modify/grow it.\n\n\n\n\nList_auto\nThis control also creates a dynamic dropdown menu, but the values come from the data entered in another column.\nExample: a linelist contains two data-entry sheets: - the first data entry sheet contains patient data\n- a second data entry sheet contains more variables for a subset of re-admitted patients.\nThe list_auto control allows to create a column on the second sheet with a drop-down menu populated dynamically with the patient IDs from the first sheet.\nIn the setup, the variable used to populate the drop-down menu is defined in the “Control Details” column of the Dictionary sheet (see ?@sec-var-control-details section).\n\n\n\nSpecial case of amdinistrative levels and health facilities\nTwo controls allow us to enter geographic information, or information about health facilities. While the created variables will technically contain dropdown menus, they are treated as a special type of variables in OubtbreakTools linelists, with dedicated tools and analyses.\nOutbreakTool linelists all have a button to import a geobase, a standardised file containing lists of administrative levels to describe places. Once the geobase successfully imported, the values from its lists will populate specific dropdown menus (see the linelist documentation on how to import a geobase).\n\nGeo\nThe “geo” control indicates that geographic data is expected. In the linelist, this results in the creation of 4 columns, one for each administrative level, which will be populated by values imported from a geobase. The user can enter data by using the GeoHelper button in the linelist or by selecting values from the cascading dropdown menus in the linelist.\n\n\n\n\n\n\nNote\n\n\n\nThe “geo” control does not need additional information to be filled in the “Control Details” column.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the linelist, the variable labels appear in an orange cell, which means that the “GeoHelper” button can be used to fill in the corresponding cells.\n\n\nExample:\nDefinition in the setup file:\n\nDisplay in the linelist file:\n\n\n\nHF\nThe “hf” control means that the user will enter en health facility. By identifying hf data in this way, you can use the GeoHelper button in the linelist to fill in the column.\n\n\n\n\n\n\nNote\n\n\n\nSimilarly to the “geo” control, the “hf” control does not need additional information to be filled in the “Control Details” column.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe variable label appears in an orange cell, which means that the GeoHelper button can be used to fill in the corresponding cells.\n\n\nExample:\nDefinition in the setup file:\n\nDisplay in the linelist :\n\n\n\n\nCalculated variables\nThree controls allow the creation of calculated columns. In general, the user can define a column by providing an Excel formula [^i.e. a combination of Excel functions], but the setup file also provides two custom functions, CASE_WHEN and CHOICE_FORMULA to simplify formula syntax.\n\n\n\n\n\n\n\n\n\n\nControl\nFunctions\nUse\nDefault value\nCan be used in analyses tables\n\n\n\n\nformula\nAny combination of Excel functions (in English)\nAnything\n\nContinuous variables: yes\nCategorical variables: no\n\n\ncase_when\nCASE_WHEN (Excel functions optional)\nReplaces nested IF\nEmpty cell; user can modify it\nno\n\n\nchoice_formula\nCHOICE_FORMULA (Excel functions optional)\nReplaces nested IF\nEmpty character; user cannot modify it\nyes\n\n\n\n\nFormula\nWhen using the “formula” control, the value displayed is calculated according to a formula defined in the Control details column of the dictionary.\n\n\nCase_when\nVariables of control “case_when” use a specifically developed function, CASE_WHEN, which replaces a succession of nested IF. While you could write the formula with nested IF, CASE_WHEN is easier to read, thus simpler to use.\nCase usage: you want to recode a variable, but you do not know which values will be generated. For example, the raw data contains a columns for the age value and a column for the age unit. You use CASE_WHEN to create a column “age_years”. The values which will be present in the column can take many decimal value in the range of reasonable ages.\n\n\n\n\n\n\nImportant\n\n\n\nCategorical variable created with this control cannot be used in univariate or bivariate tables in analyses sheets, because we cannot know in advance how many modalities the variable will take, and thus the designer cannot construct the tables.\nOn the other hand, numeric variables created with this control [^(such as age in years)] can be summarised in the analyses. Indeed, taking the average or the median of a numeric variable variable will always output one value, so the designer knows what to expect.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nIf the variable is not identified with a “case_when” control, and you still use the function in the “formula” column, Excel will not be able to return the desired result because the function is not native.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are using a recent version of Excel, you may know the functions IFS or SWITCH. Outbreak Tools does not rely on them as they are not retro compatible with some older versions of Excel. Use a CASE_WHEN or CHOICE_FORMULA instead.\n\n\nRead more about writing the formula in the Control details column of the dictionary.\n\n\nChoice_formula\nThis control indicates the use of the CHOICE_FORMULA function, another custom function to create a calculated column. This function is a special case of the CASE_WHEN formula with more constrains on it. In this case, the values that the calculated variable can take are known in advance and predefined in the “Choices” sheet.\nColumns generated with this control can be used in univariate or bivariate tables, as the number of possible categories is known in advance.\nRead more about writing the formula in the Control details column of the dictionary.\n\n\n\n\nControl details\nThis is a free text field, which accepts three types of values: - the name of a list (defined in the Choices sheet), - the name or a variable (defined in the Dictionary sheet) - a formula.\n\n\n\n\n\n\n\n\n\nControl type\nStatic dropdown menu\nControl column\nchoice_manual, choice_custom, choice_multiple\nValue expected in the “Control details” column | ========================================================================================================================+ The name of a list that contains the authorised values, defined in the Choice sheet (“List Name” column) |\n\n\n\n\nDynamic dropdown menu\nlist_auto\nThe name of an existing variable\n\n\nCalculated\nformula, choice_formula, case_when\nAn Excel formula (that can contain one or more functions, including the custom functions CASE_WHEN and CHOICE_FORMULA)\n\n\n\n\n\nDefining dropdown menu categories\nWhen the controls “choice_manual”, “choice_multiple” and “choice_custom” (optional) are selected in the “Control” column, you need to define the values the dropdown menu will contain. These values are entered on another sheet, the Choices sheet. Categories for a same variable are bundled into lists. The name of the list is entered in the “Control details” column.\n\n\n\n\n\n\n\nNote\n\n\n\nFor more information on the definition of drop-down menus, see the Choices sheet page.\n\n\nIn the case of “list auto” variables, you only need to provide the name of another variable in the “Control details” column. In the linelist, the values present in the referred variables will be automatically used to populate the dropdown menu.\n\n\nFormulas\nIf you have selected “formula”, “choice_formula” or “case_when” in the “Control” column, you need to provide the formula to be applied in this column.\n\n\n\n\n\n\nNote\n\n\n\nThe information given in the Formula control section below are also valid for “choice_formula” and “case_when” controls as these, while based on custom functions, are still formulas.\n\n\n\nFormula control\nThe formula is written in English, without an “=” sign. The formulas are automatically translated into the Excel language defined on the computer used to generate the linelist.\n\n\n\n\n\n\nWarning\n\n\n\nIf your Excel is not usually in English, pay special attention to the following:\n\nUse the English function names, such as “MEAN” instead of “MOYENNE”, or “IF” instead of “SI”.\nFunction arguments are separated by “,” in English. Beware of lingering “;” if you are used to Excel in French!\nSimilarly, English Excel uses “.” for decimals, not “,” like in French.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn Excel, you can use ALT+ENTRY to insert a carriage return and go to the next line. This does not affect the execution of your formulas, but greatly increases the readability. The same goes for inserting spaces around operators. Contrast these two formulas:\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen writing a formula, make sure that it returns an empty value for rows without an ID, as all the rows with non-null values in it will be counted in the Analyses sheets. If your graphs show a lot of “Missing” values that do not reflect how well a column is filled, check that a calculated column is not responsible for it.\n\n\n\n\nCase_when control\nUse the CASE_WHEN function to replace nested IF (therefore limiting the risk of error when writing the formula), in this form:\n\nCASE_WHEN( condition1, value1, condition2, value2, condition3, value3, …, …, DEFAULT_VALUE)\n\nYou need at least one pair of conditions but the function shines when there are many pairs. As in the nested IF or in the IFS functions, the conditional statement are tested in the order they are written. By default, any case that is not covered by the previous conditions will return an empty cell, unless you provide a default value (the else).\nExample\nYou could write a formula with nested IF to calculate an age_years column:\n\nIF(age_unit = “months”, age_value / 12, IF(age_unit = “days”, age_value / 365, IF(age_unit = “years”, age_value, IF(ISBLANK(age_unit), ““))))\n\nOr write the equivalent with CASE_WHEN:\n\nCASE_WHEN( age_unit = “months”, age_value / 12, age_unit = “days”, age_value / 365, age_unit = “years”, age_value)\n\n\n\n\n\n\n\nNote\n\n\n\nThe information about the more generalist “formula” control are also valid here.\n\n\n\n\nChoice_formula control\nThe CHOICE_FORMULA function is a subcase of CASE_WHEN for when we want to encode a few known modalities.\nThe pseudo-code is very similar to the CASE_WHEN function:\n\nCHOICE_FORMULA(list_values_choices, condition1, value1, condition2, value2, condition3, value3, …, … )\n\nBut here, the value1, value2, value3 etc. are pre-defined in the list “list_values_choices” in the “Choices” sheet, as if these values were for a dropdown menu 4.\nSince we know exactly which modalities this variable can take, we can use it as a categorical variable in the Analyses sheet, to build a uni or a bivariate table.\nExample:\n\nCHOICE_FORMULA(list_age_group, age_years &lt; 5, “0 – 4 years”, age_years &lt; 10, “5 – 9 years, age_years &lt; 15,”10 – 14 years, age_years &lt; 20, “15 – 19 years, AND(age_years &gt;= 20, age_years &lt; 120),”20+ years” )\n\nHere, “list_age_group” corresponds to the list where the potential values to be returned are predefined; “age_years” is an existing variable that contains the age in years. The values between inverted commas (“0 – 5 years”) correspond to the possible results, predefined in “list_age_group”.\n\n\n\n\n\n\nNote\n\n\n\nThe information about the more generalist “formula” control are also valid here.\n\n\n\n\n\n\nUnique\nThis is a yes/no drop-down menu field. It has no direct impact on the linelist, but the information can be used in the data cleaning phase.",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#data-exports",
    "href": "reference/dictionary_sheet.html#data-exports",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Data exports",
    "text": "Data exports\n\nThis section lets you choose the variables you want to have in each export. The rest is defined in the “Exports” sheet (see the ‘Data exports’ page).\nYou can define the order in which variables are displayed in exports. To do this, simply number them in the desired order.\n\n\n\n\n\n\nImportant\n\n\n\nVariables with any values entered in the Export columns will be exported. If you want to not export a variable, you need to keep the cells empty.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf two variables have the same number in the same export columns, they will be exported in the order they are defined in the setup (from top to bottom).\n\n\n\n\n\n\n\n\nTip\n\n\n\nIf you wish to create an anonymous export, i.e. one containing no personal identifier, you can filter the “personal identifier” column to ‘yes’ and check that the column corresponding to the anonymous export is empty.",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#data-validation",
    "href": "reference/dictionary_sheet.html#data-validation",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Data validation",
    "text": "Data validation\n\nTo improve the quality of the data entered, it is possible to alert or block the user if they attempt to enter unvalid data.\nFor continuous variables, you need to specify the min and or max values (see below), but for dropdown menu variables, go directly to the “Alert” column.\n\nMin\nThis is a free text field that defines the minimal authorised value in the variable. It can be an integer, a decimal number, the name of a variable or a formula.\n\n\n\n\n\n\nImportant\n\n\n\nAs with the formulas, the “=” sign is not placed in front of the limits you define.\n\n\nExamples: - “0” to not allow negative vallues in an age in month or year column\n- “date_notification” to not allo the date of exit to be before the arrival in the health facility\n- “today() - 2 * 365” to avoid dates older than two years if you know that the linelist is not used to enter retrospective data\n\n\nMax\nThis is a free text field used to define the upper limit of authorised values. It can be an integer, a decimal number, a variable name or a formula.\n\n\n\n\n\n\nImportant\n\n\n\nAs with the formulas, the “=” sign is not placed in front of the limits you define.\n\n\nExamples: - “120” to limit the age in year\n- “today()” to not allow dates after the day of data entry in the case of most date columns\n\n\nAlert\nThis is a drop-down field. There are two possible options:\n\nerror\nwarning\n\n❌ The “error” message blocks data entry: it is impossible to force the entry of a value other than the authorised one. It is symbolised by a cross in a red circle 5.\n⚠️ “warning” warns the end user that the data entered is not within the expected values, but if they wish they can still keep this data. It is symbolised by an exclamation mark in an orange triangle.\n\n\n\n\n\n\nNote\n\n\n\nYou can add error and warnings to columns with dropdown menus, the messages will appear if the user tries to enter a value not from the dropdown menu.\n\n\n\n\nMessage\nThis is a free text field used to give the end user an indication of why their entry is invalid.\n\n\nExamples\n\nA continuous variable: patient’s age\nDefinition in the setup file:\n\nHow it is encoded in the data validation system of the linelist file:\n\nWarning box appearing when the user attempts to enter invalid data:\n\n\n\nA categorical variable: age unit\nDefinition in the setup file:\n\nDisplay in the linelist:\n\n\n\nA date variable\nDefinition in the setup file:\n\nHow it is encoded in the data validation system of the linelist file:\n\nWarning box appearing when the user attempts to enter invalid data:",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#conditional-formatting",
    "href": "reference/dictionary_sheet.html#conditional-formatting",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Conditional Formatting",
    "text": "Conditional Formatting\n\nThis section is used to define conditional formatting rules.\n\nFormatting condition\nThe “Formatting Condition” column is a free text column where one must provide the name of a variable to use as a reference. Rows for which the reference column contains 1 will be formatted with the formatting defined in the “Formatting Values” column. Row containing 0 will have no special formatting.\nThis means that in most cases, you will need to calculate a dummy variable, with a result of 1 or 0, to guide the formatting.\n\n\n\n\n\n\nTip\n\n\n\nyou can give special names to these calculated columns to easily identify them.\n\n\n\n\nFormatting values\nThis is a free text column, but what matters is not the text entered in it but the formatting applied to it, which is read and applied to the cells in the linelist file, if the formatting condition is met.\n\n\nLock cells\nThe ‘Lock Cells’ section is not currently available.\n\n\nExample\nDefinition in the setup file:\n\n\nDisplay in the linelist file:\n\nNote that the hospitalised_format columns is completely hidden because it is of no interest to the user, just needed internally to know where to apply formatting.",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/dictionary_sheet.html#footnotes",
    "href": "reference/dictionary_sheet.html#footnotes",
    "title": "Dictionary: define linelist tables and their variables",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nvlist = vertical list of labels↩︎\nhlist = horizontal list↩︎\nNote that we used the word “type” in its computer science meaning, which differs a bit from the statisctics one↩︎\nyou can of course give the list any name that you wish, such as “list_age_group” for example if you were recoding age↩︎\nSometimes the user manage to break through by pasting values though↩︎",
    "crumbs": [
      "About",
      "Reference",
      "Dictionary: define linelist tables and their variables"
    ]
  },
  {
    "objectID": "reference/setup_file.html",
    "href": "reference/setup_file.html",
    "title": "Setup reference",
    "section": "",
    "text": "The dictionary is stored in an Excel table divided into several sections, which define the different sheets that will be part of the Excel linelist produced.\nEach line corresponds to a variable and includes most the characteristics of that variable.\nThe dictionary is divided into the following sections:\n+————————–+————————————————————————————————————————————-+ | Section | Description | +==========================+=====================================================================================================================================+ | Variable name and labels | Lists the variables to be collected by defining their main characteristics | +————————–+————————————————————————————————————————————-+ | Sheets and Sections | Allows you to organise variables by sheets, section and sub-section, and define the table orientation | +————————–+————————————————————————————————————————————-+ | Properties | Allows you to assign different properties to variables, in particular defining dropdown menus, formulas or format. | +————————–+————————————————————————————————————————————-+ | Data exports | Selects and order the variables to be exported | +————————–+————————————————————————————————————————————-+ | Data validation | Allows you to define accepted MIN and MAX values, and the corresponding alert or error when an input is outside the defined limits. | +————————–+————————————————————————————————————————————-+\n::: callout-warning When compiling the setup, make sure that all the columns from this sheet are unhidden. :::\n## Variable names and labels\nThis first part lists all the variables you want to have in the final linelist.\n\n\n\n\nThis is a free text field used to identify the variable. This name can be used to refer to this variable in formulas or in the Analyses sheet.\nAfter you generate the linelist file, the variable name info will be found in the formula bar in the grey cells from the eigth row of the linelist sheet, or in the cell name zone for cells of the Info sheet.\nVariable names rules:\n- Names must be unique in the setup file, even if the variables are on different sheets. If two or more variables were to have the same name, the second occurrence will automatically be suffixed with the value “1”; if there is a third, it will be suffixed with the value “2”, and so on.\n- Names must be at least 4 characters long to be valid.\n- Names should not contain special characters (except for “_”).\n- Names will be automatically converted to lowercase during compilation.\n\n\n\n\n\n\nTip\n\n\n\nAs a general advice, try to create short but explicit names.\n\n\n::: callout-tip To ensure that variable names are unique, you can add the name of the sheet in which the variable will appear as a prefix, or use numbers. :::\n::: callout-tip We recommend that you do not leave any blanks in the variable name. Instead, replace them with “_”. :::\n### Main Label\n\nThis is a free text field that defines the variable label. Labels can be more descriptive and longer than names, but we recommend to keep it moderately short for legibility reasons. The main label appears in black and bold in the linelist file.\nIt cannot be modified by the end user (with one exception, see the “Editable section” below).\n\n\n\n\n\n\nNote\n\n\n\nTo add more details, you can use the following fields: “Sub Label” and “Note” (see below).\n\n\n### Dev Comment\n\nThis free text column is for the sole benefit of the setup file creator (in all probability, you), to add purely technical or practical information. It is not read by the designer and does not affect the generated file.\n\n\n\n\n\n\nNote\n\n\n\nOne of the author of this wiki uses these tags:\n\nFormat: calculated columns created solely for applying conditional formatting (see section on “Conditional formatting” below). These columns are very specific, and pure format. Tagging them helps to quickly make sure that they are never exported\nMoH: columns created when a general setup is adapted to a specific country, by adding exports to a specific MoH format. Usually, we need to create some calculated columns that match the MoH export (recoding levels, or perhaps merging information of several variables…). I like to keep track of which columns are from the general setup and which are specific adaptations.\nWHO/Epinetwork: sometimes I want to keep the information that a column is here because it comes from the Epinetwork or the WHO CRF, and should probably not be modified.\nBoilerplate: calculated columns that are needed for graphs, or because the information is important (such as epiweeks). These columns are often hidden, but not necessarily.\n\n\n\nFeel free to use this column in a way that helps you work!\n### Editable Label\n\nThis is a yes/no column. If the value is “yes”, the label of the variable in the linelist can be modified by the user. If the value is “no” or if the field remains empty, the variable label in the linelist will be protected.\n\n\n\n\nThis is a free text field used to add a brief description under the variable label, such as the format in which a date is expected, a unit, or any other information to help with filling the variable in.\nIn the linelist, the sub-label appears just below the main label, in blue and slightly smaller font. It cannot be modified by the end user.\n\n\n\n\n\n\nNote\n\n\n\nThe sublabels “Calculated” and “Custom label” are added automatically, no need to add them manually.\n\n\n::: callout-tip Common sublabels include the following:\n\nYes / No\nYes / No / Unk.\nFree text\nThe format of your date (ex: DD/MM/YYYY) :::\n\n### Note\n\nThis is a free text field which content is added to the linelist as a comment on the corresponding cell. The comment in the linelist can be read by hovering the cursor over the cell. It cannot be modified by the end user.\n\n\n\nDefinition in the setup file:\n\nDisplay in the linelistfile:",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "reference/setup_file.html#the-setup-file",
    "href": "reference/setup_file.html#the-setup-file",
    "title": "Setup reference",
    "section": "",
    "text": "The dictionary is stored in an Excel table divided into several sections, which define the different sheets that will be part of the Excel linelist produced.\nEach line corresponds to a variable and includes most the characteristics of that variable.\nThe dictionary is divided into the following sections:\n+————————–+————————————————————————————————————————————-+ | Section | Description | +==========================+=====================================================================================================================================+ | Variable name and labels | Lists the variables to be collected by defining their main characteristics | +————————–+————————————————————————————————————————————-+ | Sheets and Sections | Allows you to organise variables by sheets, section and sub-section, and define the table orientation | +————————–+————————————————————————————————————————————-+ | Properties | Allows you to assign different properties to variables, in particular defining dropdown menus, formulas or format. | +————————–+————————————————————————————————————————————-+ | Data exports | Selects and order the variables to be exported | +————————–+————————————————————————————————————————————-+ | Data validation | Allows you to define accepted MIN and MAX values, and the corresponding alert or error when an input is outside the defined limits. | +————————–+————————————————————————————————————————————-+\n::: callout-warning When compiling the setup, make sure that all the columns from this sheet are unhidden. :::\n## Variable names and labels\nThis first part lists all the variables you want to have in the final linelist.\n\n\n\n\nThis is a free text field used to identify the variable. This name can be used to refer to this variable in formulas or in the Analyses sheet.\nAfter you generate the linelist file, the variable name info will be found in the formula bar in the grey cells from the eigth row of the linelist sheet, or in the cell name zone for cells of the Info sheet.\nVariable names rules:\n- Names must be unique in the setup file, even if the variables are on different sheets. If two or more variables were to have the same name, the second occurrence will automatically be suffixed with the value “1”; if there is a third, it will be suffixed with the value “2”, and so on.\n- Names must be at least 4 characters long to be valid.\n- Names should not contain special characters (except for “_”).\n- Names will be automatically converted to lowercase during compilation.\n\n\n\n\n\n\nTip\n\n\n\nAs a general advice, try to create short but explicit names.\n\n\n::: callout-tip To ensure that variable names are unique, you can add the name of the sheet in which the variable will appear as a prefix, or use numbers. :::\n::: callout-tip We recommend that you do not leave any blanks in the variable name. Instead, replace them with “_”. :::\n### Main Label\n\nThis is a free text field that defines the variable label. Labels can be more descriptive and longer than names, but we recommend to keep it moderately short for legibility reasons. The main label appears in black and bold in the linelist file.\nIt cannot be modified by the end user (with one exception, see the “Editable section” below).\n\n\n\n\n\n\nNote\n\n\n\nTo add more details, you can use the following fields: “Sub Label” and “Note” (see below).\n\n\n### Dev Comment\n\nThis free text column is for the sole benefit of the setup file creator (in all probability, you), to add purely technical or practical information. It is not read by the designer and does not affect the generated file.\n\n\n\n\n\n\nNote\n\n\n\nOne of the author of this wiki uses these tags:\n\nFormat: calculated columns created solely for applying conditional formatting (see section on “Conditional formatting” below). These columns are very specific, and pure format. Tagging them helps to quickly make sure that they are never exported\nMoH: columns created when a general setup is adapted to a specific country, by adding exports to a specific MoH format. Usually, we need to create some calculated columns that match the MoH export (recoding levels, or perhaps merging information of several variables…). I like to keep track of which columns are from the general setup and which are specific adaptations.\nWHO/Epinetwork: sometimes I want to keep the information that a column is here because it comes from the Epinetwork or the WHO CRF, and should probably not be modified.\nBoilerplate: calculated columns that are needed for graphs, or because the information is important (such as epiweeks). These columns are often hidden, but not necessarily.\n\n\n\nFeel free to use this column in a way that helps you work!\n### Editable Label\n\nThis is a yes/no column. If the value is “yes”, the label of the variable in the linelist can be modified by the user. If the value is “no” or if the field remains empty, the variable label in the linelist will be protected.\n\n\n\n\nThis is a free text field used to add a brief description under the variable label, such as the format in which a date is expected, a unit, or any other information to help with filling the variable in.\nIn the linelist, the sub-label appears just below the main label, in blue and slightly smaller font. It cannot be modified by the end user.\n\n\n\n\n\n\nNote\n\n\n\nThe sublabels “Calculated” and “Custom label” are added automatically, no need to add them manually.\n\n\n::: callout-tip Common sublabels include the following:\n\nYes / No\nYes / No / Unk.\nFree text\nThe format of your date (ex: DD/MM/YYYY) :::\n\n### Note\n\nThis is a free text field which content is added to the linelist as a comment on the corresponding cell. The comment in the linelist can be read by hovering the cursor over the cell. It cannot be modified by the end user.\n\n\n\nDefinition in the setup file:\n\nDisplay in the linelistfile:",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "reference/setup_file.html#sheets-and-sections",
    "href": "reference/setup_file.html#sheets-and-sections",
    "title": "Setup reference",
    "section": "Sheets and sections",
    "text": "Sheets and sections\n\nThis section of the dictionary organises variables within sheets and tables, and thus creates part of the structure of the linelist.\nAs a general rule, there is one table per data entry sheet created, but the structure of the table (i.e. the organisation of the variables) can vary.\n\nSheet Name\n\nThis is a free text field that contains the name of the sheet in which the variable will appear.\nIn general, your linelists will contain at least a data entry sheet, and a metadata/general information data sheet.\n\n\n\n\n\n\nNote\n\n\n\nMore sheets can be created, either automatically (such as the “Instruction” sheet), or by defining analyses in other parts of the setup file.\n\n\n### Sheet Type {#sheet-types}\n\nThis is a drop-down menu field used to define the type of table contained in the sheet. There are 2 options:\n\nvlist1D1: corresponds to a table built vertically, so the variables labels appear in columns, and only one entry is expected for each variable. This type of sheet is used to collect general information about the facilities or data collection.\nhlist2D2: corresponds to a horizontally constructed table, so the variables labels appear in a row, and several entries are possible for each variable. This type of sheet is used to collect patient data.\n\n\n\n\nMain Section\n\nThis is a free text field used to define the name of the main section in which the variable is located. This makes it possible to organise variables by theme to make data entry and navigation easier.\nIn the linelist file, the main sections appear in a darker colour in rows or columns, depending on the type of table (dark blue in ?@sec-sheet-sections-example). They cannot be modified by the end user.\n\n\n\n\n\n\nTip\n\n\n\nTo make the dictionary easier to read, we recommend that you group (write one below another) the variables of a same sheet and a same section.\n\n\n### Sub Section\n\nThis is a free text field that allows you to further refine the organisation of variables in the table by creating a second level of grouping.\nIn the linelist file, the sub-sections appear in a lighter colour in the row or column, depending on the type of table (light blue in ?@sec-sheet-sections-example). They cannot be modified by the end user.\n\n\nExample\n\nvlist1D\nDefinition in the setup file:\n\nDisplay in the linelist file:\n\n\n\nhlist2D\nDefinition in the setup file:\n\nDisplay in the linelist file:",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "reference/setup_file.html#properties",
    "href": "reference/setup_file.html#properties",
    "title": "Setup reference",
    "section": "Properties",
    "text": "Properties\nThe properties section is as follows:\n\n\nStatus\nThis is a drop-down field that contains four options for defining the visibility of the variable:\n\n“mandatory”: variable displayed by default, it cannot be hidden in the linelist\n“optional, visible”: variable displayed by default, it can be displayed or hidden by the linelist user\n“optional, hidden”: variable hidden by default, it can be displayed or hidden by the linelist user\n“hidden”: variable hidden by default, it cannot be displayed in the linelist\n\nVariables can be shown or hidden using the Show/Hide button in the linelist file.\n\nExample\nDefinition in the setup file:\n\nDisplay in the linelist file:\n\n\n\n\n\n\n\n\nNote\n\n\n\n“Mandatory” variables in the setup file appear as “Mandatory” in the “Show/Hide” pop up, and cannot be hidden.\n1\nThe “optional, hidden” variables in the setup file appear as “Hidden” (by default). However, the user can change the status by choosing “Show”, in which case the column will become visible. \n2 \n3\nThe “Notification year” variable does not appear in the list of variables because it is in “hidden” status in the setup file.\nThe “optional, visible” variables in the setup file appear as “Displayed” (by default). However, you can change the status by choosing “Hide”, in which case the column will no longer be visible.\n4 \n\n\n### Register Book\n\nThis is a yes/no drop-down menu field used to predefine the variables to be included in the register to be printed. This is not mandatory and can be managed later, directly in the linelist file.\n\n\n\nPersonal Identifier\n\nThis is a yes/no drop-down menu field that indicates that the variable contains personal data (such as names, phone numbers etc.).\nThis column has to uses: - it allows the setup developer to quickly identify variables containing personal data in its dictionary\n- it is used to remove variables automatically from the exports if such a behaviour is needed (see the Exports sheet).\n\n\nThinking about variables\nThere are many ways of thinking about variables and of classifying them.\nIn general we can distinguished between input variables, where the user enters raw data, and calculated (or derived) variables, which require no input. Both of them can be created in OutbreakTools.\nIndependently of this distinction, a variety of variables types can exist, containing numbers or text in various forms. In Excel, we will often use the types integer, decimals, dates and text.3. See the section on ?@sec-var-type for more information.\nFor input variables, you could think of two ways of entering data: a “free” approach, where user can enter the value of their choice, and a controlled (constrained) approach, where the values the user can enter are limited. In Excel, this is generally implemented through dropdown menus from which the data encoder selects a value. In OutbreakTools, there have several ways of building dropdown menus, depending on whether you know the categories in advance or not. This is what we call “variable control”. Learn more about it in the ?@sec-var-control.\nFinally, many software allow the user to set the way the data is displayed, which we here call format. For example:\n- The date first of January of 2023 can be displayed as “01/01/2024”, or “1/1/24” or 1-Jan-24” etc.\n- The number “1” could be displayed as “1” simply, or “001”\n- The number 0.01 could be displayed with different levels of rounding, or even as “10%” if the column contains proportions that can be displayed as percentages.\nLearn more about format in ?@sec-var-format\n\n\nVariable Type\n\nThis column proposes a drop-down menu field containing four options for defining the type [^which is sometimes called class in some softwares] of each variable:\n\nText: creates a column of text [^also called character string in some softwares]. The entry of the text may be free or constrained by a dropdown menu, see the ?@sec-var-control section below.\nDate: creates a date column, whose exact format is defined in the next column, ?@sec-var-format. The default format is jj-mmm-aaaa.\nInteger: creates an integer column\nDecimal: creates a column with decimal numbers. The number of digits after the decimal point is defined in the following ?@sec-var-format column.\n\n\n\n\nVariable Format\n\nThis field is used to specify the format of the variable (which depends on its type).\nThere is a predefined drop-down list with common options, but you can enter any format by hand, as long as it is written in Excel syntax.\n\nExample: for an integer to appear with at least 2 characters, enter the format: # #00\nNote that the default data format is jj-mmm-aaaa.\n\n\nControl\n\nThis is a dropdown field containing nine options for defining variables that are not simple free entry variables:\n\nchoice_manual\nchoice_custom\nchoice_multiple\nlist_auto\ngeo\nhf\nformula\ncase_when\nchoice_formula\n\nThese options can be broadly classified in three sorts of variables to be created:\n\n\n\n\n\n\n\n\nSort of variable\nControls\nData entry in the linelist\n\n\n\n\nCategorical\nchoice_manual, choice_custom, choice_multiple, list_auto\nDropdown menu\n\n\nGeo-related columns (a special case of categorical)\ngeo, hf\nGeoHelper or dropdown menu\n\n\nCalculated\nformula, choice_formula, case_when\nNo user input needed in these columns\n\n\n\n\n\nDropdown menu variables\nThis table summarises the different options:\n\n\n\n\n\n\n\n\n\nControl\nchoice_manual\nHow to populate the dropdown menu?\nPredefined values\nWhere are values defined?\nSetup file, in the “Choice” sheet\nData entry in the linelist | =====================================================================================+ One value selected from a dropdown menu |\n\n\n\n\nchoice_multiple\nPredefined values\nSetup file, in the “Choice” sheet\nSeveral values selected from a dropdown menu |\n\n\nchoice_custom\nUser-defined values (but see details)\nLinelist file, in the “Custom dropdown” sheet\nOne value selected from a dropdown menu |\n\n\nlist_auto\nUser-defined values but from another data column | Linelist file, in another column | One value, selected from a dropdown populated by the values of another variable\n\n\n\n\nChoice_manual\nThis control creates a categorical variable with a static dropdown menu in the linelist, from which one value can be selected. The authorised values from the dropdown menu are defined in advance in the setup and cannot be modified by the users of the linelist (hence the “static”).\nIn the setup file, we define these values in a list stored in the “Choices” sheet, and fill the name of that list in the column “Control details” column (see ?@sec-var-control-details section).\n\n\nChoice_multiple\nThis control is similar to the choice manual, in that it creates a static drop-down menu in the linelist from predefined values entered in the setup.\nThe difference is that in the created linelist file, the user can use the dropdown menu several times to select multiple values. These values will be concatenated and stored as a chain of character. By default, the separator is a coma (“,”), but you can modify this in the control column. For example, entering choice_multiple(“_”) would use the character “_” to separate values instead of “,”.\nExample: if the user select “Azythromicin”, then “Ampicilin” from a dropdown menu, the value “Azythromicin, Ampicilin” will be stored in the cell.\n\n\n\n\n\n\nNote\n\n\n\nA choice_multiple column cannot be used in the Analyses sheets as the designer cannot predict the number of combinations the user will create, and thus cannot create tables with appropriate size.\n\n\n\n\nChoice_custom\nThis control creates a dynamic dropdown menu in the linelist, but contrary to the previous controls, the values are not (necessarily) predefined in the setup, but instead defined by the user. This control is useful for variables where one would like to enforce standardization of values, but the values to encode are not known in advance.\nExample: you wish to create a column containing the name of facilities patients can be transferred to. The names of these facilities is site dependent, thus unknown in advance.\nUsing the choice_custom control will create a table in the “Custom dropdown” sheet in the linelist where the user can fill-in values to populate the dynamic, customised drop-down menu.\n\n\n\n\n\n\nTip\n\n\n\nWhile by default the dropdown menu created is empty, it is possible to prefill it by filling the “Control Details” column with a list of choices, like for the other types of dropdowns menus (see ?@sec-var-control-details section). The table in the “Custom dropdown” sheet of the linelist will still created and future users will be able to modify/grow it.\n\n\n\n\nList_auto\nThis control also creates a dynamic dropdown menu, but the values come from the data entered in another column.\nExample: a linelist contains two data-entry sheets: - the first data entry sheet contains patient data\n- a second data entry sheet contains more variables for a subset of re-admitted patients.\nThe list_auto control allows to create a column on the second sheet with a drop-down menu populated dynamically with the patient IDs from the first sheet.\nIn the setup, the variable used to populate the drop-down menu is defined in the “Control Details” column of the Dictionary sheet (see ?@sec-var-control-details section).\n\n\n\nSpecial case of amdinistrative levels and health facilities\nTwo controls allow us to enter geographic information, or information about health facilities. While the created variables will technically contain dropdown menus, they are treated as a special type of variables in OubtbreakTools linelists, with dedicated tools and analyses.\nOutbreakTool linelists all have a button to import a geobase, a standardised file containing lists of administrative levels to describe places. Once the geobase successfully imported, the values from its lists will populate specific dropdown menus (see the linelist documentation on how to import a geobase).\n\nGeo\nThe “geo” control indicates that geographic data is expected. In the linelist, this results in the creation of 4 columns, one for each administrative level, which will be populated by values imported from a geobase. The user can enter data by using the GeoHelper button in the linelist or by selecting values from the cascading dropdown menus in the linelist.\n\n\n\n\n\n\nNote\n\n\n\nThe “geo” control does not need additional information to be filled in the “Control Details” column.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the linelist, the variable labels appear in an orange cell, which means that the “GeoHelper” button can be used to fill in the corresponding cells.\n\n\nExample:\nDefinition in the setup file:\n\nDisplay in the linelist file:\n\n\n\nHF\nThe “hf” control means that the user will enter en health facility. By identifying hf data in this way, you can use the GeoHelper button in the linelist to fill in the column.\n\n\n\n\n\n\nNote\n\n\n\nSimilarly to the “geo” control, the “hf” control does not need additional information to be filled in the “Control Details” column.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe variable label appears in an orange cell, which means that the GeoHelper button can be used to fill in the corresponding cells.\n\n\nExample:\nDefinition in the setup file:\n\nDisplay in the linelist :\n\n\n\n\nCalculated variables\nThree controls allow the creation of calculated columns. In general, the user can define a column by providing an Excel formula [^i.e. a combination of Excel functions], but the setup file also provides two custom functions, CASE_WHEN and CHOICE_FORMULA to simplify formula syntax.\n\n\n\n\n\n\n\n\n\n\nControl\nFunctions\nUse\nDefault value\nCan be used in analyses tables\n\n\n\n\nformula\nAny combination of Excel functions (in English)\nAnything\n\nContinuous variables: yes\nCategorical variables: no\n\n\ncase_when\nCASE_WHEN (Excel functions optional)\nReplaces nested IF\nEmpty cell; user can modify it\nno\n\n\nchoice_formula\nCHOICE_FORMULA (Excel functions optional)\nReplaces nested IF\nEmpty character; user cannot modify it\nyes\n\n\n\n\nFormula\nWhen using the “formula” control, the value displayed is calculated according to a formula defined in the Control details column of the dictionary.\n\n\nCase_when\nVariables of control “case_when” use a specifically developed function, CASE_WHEN, which replaces a succession of nested IF. While you could write the formula with nested IF, CASE_WHEN is easier to read, thus simpler to use.\nCase usage: you want to recode a variable, but you do not know which values will be generated. For example, the raw data contains a columns for the age value and a column for the age unit. You use CASE_WHEN to create a column “age_years”. The values which will be present in the column can take many decimal value in the range of reasonable ages.\n\n\n\n\n\n\nImportant\n\n\n\nCategorical variable created with this control cannot be used in univariate or bivariate tables in analyses sheets, because we cannot know in advance how many modalities the variable will take, and thus the designer cannot construct the tables.\nOn the other hand, numeric variables created with this control [^(such as age in years)] can be summarised in the analyses. Indeed, taking the average or the median of a numeric variable variable will always output one value, so the designer knows what to expect.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nIf the variable is not identified with a “case_when” control, and you still use the function in the “formula” column, Excel will not be able to return the desired result because the function is not native.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are using a recent version of Excel, you may know the functions IFS or SWITCH. Outbreak Tools does not rely on them as they are not retro compatible with some older versions of Excel. Use a CASE_WHEN or CHOICE_FORMULA instead.\n\n\nRead more about writing the formula in the Control details column of the dictionary.\n\n\nChoice_formula\nThis control indicates the use of the CHOICE_FORMULA function, another custom function to create a calculated column. This function is a special case of the CASE_WHEN formula with more constrains on it. In this case, the values that the calculated variable can take are known in advance and predefined in the “Choices” sheet.\nColumns generated with this control can be used in univariate or bivariate tables, as the number of possible categories is known in advance.\nRead more about writing the formula in the Control details column of the dictionary.\n\n\n\n\nControl details\nThis is a free text field, which accepts three types of values: - the name of a list (defined in the Choices sheet), - the name or a variable (defined in the Dictionary sheet) - a formula.\n\n\n\n\n\n\n\n\n\nControl type\nStatic dropdown menu\nControl column\nchoice_manual, choice_custom, choice_multiple\nValue expected in the “Control details” column | ========================================================================================================================+ The name of a list that contains the authorised values, defined in the Choice sheet (“List Name” column) |\n\n\n\n\nDynamic dropdown menu\nlist_auto\nThe name of an existing variable\n\n\nCalculated\nformula, choice_formula, case_when\nAn Excel formula (that can contain one or more functions, including the custom functions CASE_WHEN and CHOICE_FORMULA)\n\n\n\n\n\nDefining dropdown menu categories\nWhen the controls “choice_manual”, “choice_multiple” and “choice_custom” (optional) are selected in the “Control” column, you need to define the values the dropdown menu will contain. These values are entered on another sheet, the Choices sheet. Categories for a same variable are bundled into lists. The name of the list is entered in the “Control details” column.\n\n\n\n\n\n\n\nNote\n\n\n\nFor more information on the definition of drop-down menus, see the Choices sheet page.\n\n\nIn the case of “list auto” variables, you only need to provide the name of another variable in the “Control details” column. In the linelist, the values present in the referred variables will be automatically used to populate the dropdown menu.\n\n\nFormulas\nIf you have selected “formula”, “choice_formula” or “case_when” in the “Control” column, you need to provide the formula to be applied in this column.\n\n\n\n\n\n\nNote\n\n\n\nThe information given in the Formula control section below are also valid for “choice_formula” and “case_when” controls as these, while based on custom functions, are still formulas.\n\n\n\nFormula control\nThe formula is written in English, without an “=” sign. The formulas are automatically translated into the Excel language defined on the computer used to generate the linelist.\n\n\n\n\n\n\nWarning\n\n\n\nIf your Excel is not usually in English, pay special attention to the following:\n\nUse the English function names, such as “MEAN” instead of “MOYENNE”, or “IF” instead of “SI”.\nFunction arguments are separated by “,” in English. Beware of lingering “;” if you are used to Excel in French!\nSimilarly, English Excel uses “.” for decimals, not “,” like in French.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn Excel, you can use ALT+ENTRY to insert a carriage return and go to the next line. This does not affect the execution of your formulas, but greatly increases the readability. The same goes for inserting spaces around operators. Contrast these two formulas:\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen writing a formula, make sure that it returns an empty value for rows without an ID, as all the rows with non-null values in it will be counted in the Analyses sheets. If your graphs show a lot of “Missing” values that do not reflect how well a column is filled, check that a calculated column is not responsible for it.\n\n\n\n\nCase_when control\nUse the CASE_WHEN function to replace nested IF (therefore limiting the risk of error when writing the formula), in this form:\n\nCASE_WHEN( condition1, value1, condition2, value2, condition3, value3, …, …, DEFAULT_VALUE)\n\nYou need at least one pair of conditions but the function shines when there are many pairs. As in the nested IF or in the IFS functions, the conditional statement are tested in the order they are written. By default, any case that is not covered by the previous conditions will return an empty cell, unless you provide a default value (the else).\nExample\nYou could write a formula with nested IF to calculate an age_years column:\n\nIF(age_unit = “months”, age_value / 12, IF(age_unit = “days”, age_value / 365, IF(age_unit = “years”, age_value, IF(ISBLANK(age_unit), ““))))\n\nOr write the equivalent with CASE_WHEN:\n\nCASE_WHEN( age_unit = “months”, age_value / 12, age_unit = “days”, age_value / 365, age_unit = “years”, age_value)\n\n\n\n\n\n\n\nNote\n\n\n\nThe information about the more generalist “formula” control are also valid here.\n\n\n\n\nChoice_formula control\nThe CHOICE_FORMULA function is a subcase of CASE_WHEN for when we want to encode a few known modalities.\nThe pseudo-code is very similar to the CASE_WHEN function:\n\nCHOICE_FORMULA(list_values_choices, condition1, value1, condition2, value2, condition3, value3, …, … )\n\nBut here, the value1, value2, value3 etc. are pre-defined in the list “list_values_choices” in the “Choices” sheet, as if these values were for a dropdown menu 4.\nSince we know exactly which modalities this variable can take, we can use it as a categorical variable in the Analyses sheet, to build a uni or a bivariate table.\nExample:\n\nCHOICE_FORMULA(list_age_group, age_years &lt; 5, “0 – 4 years”, age_years &lt; 10, “5 – 9 years, age_years &lt; 15,”10 – 14 years, age_years &lt; 20, “15 – 19 years, AND(age_years &gt;= 20, age_years &lt; 120),”20+ years” )\n\nHere, “list_age_group” corresponds to the list where the potential values to be returned are predefined; “age_years” is an existing variable that contains the age in years. The values between inverted commas (“0 – 5 years”) correspond to the possible results, predefined in “list_age_group”.\n\n\n\n\n\n\nNote\n\n\n\nThe information about the more generalist “formula” control are also valid here.\n\n\n### Unique\nThis is a yes/no drop-down menu field. It has no direct impact on the linelist, but the information can be used in the data cleaning phase.",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "reference/setup_file.html#data-exports",
    "href": "reference/setup_file.html#data-exports",
    "title": "Setup reference",
    "section": "Data exports",
    "text": "Data exports\n\nThis section lets you choose the variables you want to have in each export. The rest is defined in the “Exports” sheet (see the ‘Data exports’ page).\nYou can define the order in which variables are displayed in exports. To do this, simply number them in the desired order.\n\n\n\n\n\n\nImportant\n\n\n\nVariables with any values entered in the Export columns will be exported. If you want to not export a variable, you need to keep the cells empty.\n\n\n::: callout-note If two variables have the same number in the same export columns, they will be exported in the order they are defined in the setup (from top to bottom). :::\n::: callout-tip If you wish to create an anonymous export, i.e. one containing no personal identifier, you can filter the “personal identifier” column to ‘yes’ and check that the column corresponding to the anonymous export is empty. :::\n## Data validation\n\nTo improve the quality of the data entered, it is possible to alert or block the user if they attempt to enter unvalid data.\nFor continuous variables, you need to specify the min and or max values (see below), but for dropdown menu variables, go directly to the “Alert” column.\n\nMin\nThis is a free text field that defines the minimal authorised value in the variable. It can be an integer, a decimal number, the name of a variable or a formula.\n\n\n\n\n\n\nImportant\n\n\n\nAs with the formulas, the “=” sign is not placed in front of the limits you define.\n\n\nExamples: - “0” to not allow negative vallues in an age in month or year column\n- “date_notification” to not allo the date of exit to be before the arrival in the health facility\n- “today() - 2 * 365” to avoid dates older than two years if you know that the linelist is not used to enter retrospective data\n\n\nMax\nThis is a free text field used to define the upper limit of authorised values. It can be an integer, a decimal number, a variable name or a formula.\n\n\n\n\n\n\nImportant\n\n\n\nAs with the formulas, the “=” sign is not placed in front of the limits you define.\n\n\nExamples: - “120” to limit the age in year\n- “today()” to not allow dates after the day of data entry in the case of most date columns\n\n\nAlert\nThis is a drop-down field. There are two possible options:\n\nerror\nwarning\n\n❌ The “error” message blocks data entry: it is impossible to force the entry of a value other than the authorised one. It is symbolised by a cross in a red circle 5.\n⚠️ “warning” warns the end user that the data entered is not within the expected values, but if they wish they can still keep this data. It is symbolised by an exclamation mark in an orange triangle.\n\n\n\n\n\n\nNote\n\n\n\nYou can add error and warnings to columns with dropdown menus, the messages will appear if the user tries to enter a value not from the dropdown menu.\n\n\n### Message\nThis is a free text field used to give the end user an indication of why their entry is invalid.\n\n\nExamples\n\nA continuous variable: patient’s age\nDefinition in the setup file:\n\nHow it is encoded in the data validation system of the linelist file:\n\nWarning box appearing when the user attempts to enter invalid data:\n\n\n\nA categorical variable: age unit\nDefinition in the setup file:\n\nDisplay in the linelist:\n\n\n\nA date variable\nDefinition in the setup file:\n\nHow it is encoded in the data validation system of the linelist file:\n\nWarning box appearing when the user attempts to enter invalid data:",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "reference/setup_file.html#conditional-formatting",
    "href": "reference/setup_file.html#conditional-formatting",
    "title": "Setup reference",
    "section": "Conditional Formatting",
    "text": "Conditional Formatting\n\nThis section is used to define conditional formatting rules.\n\nFormatting condition\nThe “Formatting Condition” column is a free text column where one must provide the name of a variable to use as a reference. Rows for which the reference column contains 1 will be formatted with the formatting defined in the “Formatting Values” column. Row containing 0 will have no special formatting.\nThis means that in most cases, you will need to calculate a dummy variable, with a result of 1 or 0, to guide the formatting.\n\n\n\n\n\n\nTip\n\n\n\nyou can give special names to these calculated columns to easily identify them.\n\n\n### Formatting values\nThis is a free text column, but what matters is not the text entered in it but the formatting applied to it, which is read and applied to the cells in the linelist file, if the formatting condition is met.\n\n\nLock cells\nThe ‘Lock Cells’ section is not currently available.\n\n\nExample\nDefinition in the setup file:\n\n\nDisplay in the linelist file:\n\nNote that the hospitalised_format columns is completely hidden because it is of no interest to the user, just needed internally to know where to apply formatting.",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "reference/setup_file.html#footnotes",
    "href": "reference/setup_file.html#footnotes",
    "title": "Setup reference",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nvlist = vertical list of labels↩︎\nhlist = horizontal list↩︎\nNote that we used the word “type” in its computer science meaning, which differs a bit from the statisctics one↩︎\nyou can of course give the list any name that you wish, such as “list_age_group” for example if you were recoding age↩︎\nSometimes the user manage to break through by pasting values though↩︎",
    "crumbs": [
      "About",
      "Reference",
      "Setup reference"
    ]
  },
  {
    "objectID": "getting_started/create_dic.html#get-the-tools-ready",
    "href": "getting_started/create_dic.html#get-the-tools-ready",
    "title": "Create dictionary",
    "section": "",
    "text": "Download the files from github to get the most updated files. Take the empty setup file.\n\nCreate the data dictionary: go back and forth, filling the Dictionary and Choices sheets to define the data entry sheets of the linelist (at minima a metadata sheet and a main linelist sheet)\nDefine the exports: define the number of exports you want and their metadata on the Exports sheet, and fill the dedicated Export columns in the Dictionary sheet\nDefine the analyses in the Analysis sheet\nAdd new translations if you wish to, in the Translations sheet\n\nYou can check for errors between any of these steps (see the “OutbreakTools” ribbon section of this document)\n\nGenerate the linelist thanks to the designer file. Test it.\nRepeat steps 1 to 5 until the linelist works as expected. The rest of this guide will walk you through the sheets, the tables in it and the ribbon buttons.",
    "crumbs": [
      "About",
      "Getting Started",
      "Create dictionary"
    ]
  }
]